{"ast":null,"code":"\"use strict\";\n/*\n * Copyright 2021 Fluence Labs Limited\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.builtInServices = void 0;\n\nvar bs58_1 = require(\"bs58\");\n\nvar sha2_1 = require(\"multiformats/hashes/sha2\");\n\nvar commonTypes_1 = require(\"../commonTypes\");\n\nvar utils_1 = require(\"../utils\");\n\nvar Buffer_1 = __importDefault(require(\"../Buffer\"));\n\nvar success = function (result) {\n  return {\n    result: result,\n    retCode: commonTypes_1.ResultCodes.success\n  };\n};\n\nvar error = function (error) {\n  return {\n    result: error,\n    retCode: commonTypes_1.ResultCodes.error\n  };\n};\n\nvar errorNotImpl = function (methodName) {\n  return error(\"The JS implementation of Peer does not support \\\"\".concat(methodName, \"\\\"\"));\n};\n\nexports.builtInServices = {\n  peer: {\n    identify: function () {\n      return errorNotImpl('peer.identify');\n    },\n    timestamp_ms: function () {\n      return success(Date.now());\n    },\n    timestamp_sec: function () {\n      return success(Math.floor(Date.now() / 1000));\n    },\n    is_connected: function () {\n      return errorNotImpl('peer.is_connected');\n    },\n    connect: function () {\n      return errorNotImpl('peer.connect');\n    },\n    get_contact: function () {\n      return errorNotImpl('peer.get_contact');\n    },\n    timeout: function (req) {\n      if (req.args.length !== 2) {\n        return error('timeout accepts exactly two arguments: timeout duration in ms and a message string');\n      }\n\n      var durationMs = req.args[0];\n      var message = req.args[1];\n      return new Promise(function (resolve) {\n        setTimeout(function () {\n          var res = success(message);\n          resolve(res);\n        }, durationMs);\n      });\n    }\n  },\n  kad: {\n    neighborhood: function () {\n      return errorNotImpl('kad.neighborhood');\n    },\n    merge: function () {\n      return errorNotImpl('kad.merge');\n    }\n  },\n  srv: {\n    list: function () {\n      return errorNotImpl('srv.list');\n    },\n    create: function () {\n      return errorNotImpl('srv.create');\n    },\n    get_interface: function () {\n      return errorNotImpl('srv.get_interface');\n    },\n    resolve_alias: function () {\n      return errorNotImpl('srv.resolve_alias');\n    },\n    add_alias: function () {\n      return errorNotImpl('srv.add_alias');\n    },\n    remove: function () {\n      return errorNotImpl('srv.remove');\n    }\n  },\n  dist: {\n    add_module_from_vault: function () {\n      return errorNotImpl('dist.add_module_from_vault');\n    },\n    add_module: function () {\n      return errorNotImpl('dist.add_module');\n    },\n    add_blueprint: function () {\n      return errorNotImpl('dist.add_blueprint');\n    },\n    make_module_config: function () {\n      return errorNotImpl('dist.make_module_config');\n    },\n    load_module_config: function () {\n      return errorNotImpl('dist.load_module_config');\n    },\n    default_module_config: function () {\n      return errorNotImpl('dist.default_module_config');\n    },\n    make_blueprint: function () {\n      return errorNotImpl('dist.make_blueprint');\n    },\n    load_blueprint: function () {\n      return errorNotImpl('dist.load_blueprint');\n    },\n    list_modules: function () {\n      return errorNotImpl('dist.list_modules');\n    },\n    get_module_interface: function () {\n      return errorNotImpl('dist.get_module_interface');\n    },\n    list_blueprints: function () {\n      return errorNotImpl('dist.list_blueprints');\n    }\n  },\n  script: {\n    add: function () {\n      return errorNotImpl('script.add');\n    },\n    remove: function () {\n      return errorNotImpl('script.remove');\n    },\n    list: function () {\n      return errorNotImpl('script.list');\n    }\n  },\n  op: {\n    noop: function () {\n      return success({});\n    },\n    array: function (req) {\n      return success(req.args);\n    },\n    array_length: function (req) {\n      if (req.args.length !== 1) {\n        return error('array_length accepts exactly one argument, found: ' + req.args.length);\n      } else {\n        return success(req.args[0].length);\n      }\n    },\n    identity: function (req) {\n      if (req.args.length > 1) {\n        return error(\"identity accepts up to 1 arguments, received \".concat(req.args.length, \" arguments\"));\n      } else {\n        return success(req.args.length === 0 ? {} : req.args[0]);\n      }\n    },\n    concat: function (req) {\n      var incorrectArgIndices = req.args //\n      .map(function (x, i) {\n        return [Array.isArray(x), i];\n      }).filter(function (_a) {\n        var _b = __read(_a, 2),\n            isArray = _b[0],\n            _ = _b[1];\n\n        return !isArray;\n      }).map(function (_a) {\n        var _b = __read(_a, 2),\n            _ = _b[0],\n            index = _b[1];\n\n        return index;\n      });\n\n      if (incorrectArgIndices.length > 0) {\n        var str = incorrectArgIndices.join(', ');\n        return error(\"All arguments of 'concat' must be arrays: arguments \".concat(str, \" are not\"));\n      } else {\n        return success([].concat.apply([], req.args));\n      }\n    },\n    string_to_b58: function (req) {\n      if (req.args.length !== 1) {\n        return error('string_to_b58 accepts only one string argument');\n      } else {\n        return success((0, bs58_1.encode)(new TextEncoder().encode(req.args[0])));\n      }\n    },\n    string_from_b58: function (req) {\n      if (req.args.length !== 1) {\n        return error('string_from_b58 accepts only one string argument');\n      } else {\n        return success(new TextDecoder().decode((0, bs58_1.decode)(req.args[0])));\n      }\n    },\n    bytes_to_b58: function (req) {\n      if (req.args.length !== 1 || !Array.isArray(req.args[0])) {\n        return error('bytes_to_b58 accepts only single argument: array of numbers');\n      } else {\n        var argumentArray = req.args[0];\n        return success((0, bs58_1.encode)(new Uint8Array(argumentArray)));\n      }\n    },\n    bytes_from_b58: function (req) {\n      if (req.args.length !== 1) {\n        return error('bytes_from_b58 accepts only one string argument');\n      } else {\n        return success(Array.from((0, bs58_1.decode)(req.args[0])));\n      }\n    },\n    sha256_string: function (req) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var _a, input, digestOnly, asBytes, inBuffer, multihash, outBytes, res;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              if (!(req.args.length < 1 || req.args.length > 3)) return [3\n              /*break*/\n              , 1];\n              return [2\n              /*return*/\n              , error(\"sha256_string accepts 1-3 arguments, found: \".concat(req.args.length))];\n\n            case 1:\n              _a = __read(req.args, 3), input = _a[0], digestOnly = _a[1], asBytes = _a[2];\n              inBuffer = Buffer_1.default.from(input);\n              return [4\n              /*yield*/\n              , sha2_1.sha256.digest(inBuffer)];\n\n            case 2:\n              multihash = _b.sent();\n              outBytes = digestOnly ? multihash.digest : multihash.bytes;\n              res = asBytes ? Array.from(outBytes) : (0, bs58_1.encode)(outBytes);\n              return [2\n              /*return*/\n              , success(res)];\n          }\n        });\n      });\n    },\n    concat_strings: function (req) {\n      var res = ''.concat.apply('', __spreadArray([], __read(req.args), false));\n      return success(res);\n    }\n  },\n  debug: {\n    stringify: function (req) {\n      var out;\n\n      if (req.args.length === 0) {\n        out = '<empty argument list>';\n      } else if (req.args.length === 1) {\n        out = req.args[0];\n      } else {\n        out = req.args;\n      }\n\n      return success((0, utils_1.jsonify)(out));\n    }\n  },\n  math: {\n    add: function (req) {\n      var err;\n\n      if (err = checkForArgumentsCount(req, 2)) {\n        return err;\n      }\n\n      var _a = __read(req.args, 2),\n          x = _a[0],\n          y = _a[1];\n\n      return success(x + y);\n    },\n    sub: function (req) {\n      var err;\n\n      if (err = checkForArgumentsCount(req, 2)) {\n        return err;\n      }\n\n      var _a = __read(req.args, 2),\n          x = _a[0],\n          y = _a[1];\n\n      return success(x - y);\n    },\n    mul: function (req) {\n      var err;\n\n      if (err = checkForArgumentsCount(req, 2)) {\n        return err;\n      }\n\n      var _a = __read(req.args, 2),\n          x = _a[0],\n          y = _a[1];\n\n      return success(x * y);\n    },\n    fmul: function (req) {\n      var err;\n\n      if (err = checkForArgumentsCount(req, 2)) {\n        return err;\n      }\n\n      var _a = __read(req.args, 2),\n          x = _a[0],\n          y = _a[1];\n\n      return success(Math.floor(x * y));\n    },\n    div: function (req) {\n      var err;\n\n      if (err = checkForArgumentsCount(req, 2)) {\n        return err;\n      }\n\n      var _a = __read(req.args, 2),\n          x = _a[0],\n          y = _a[1];\n\n      return success(Math.floor(x / y));\n    },\n    rem: function (req) {\n      var err;\n\n      if (err = checkForArgumentsCount(req, 2)) {\n        return err;\n      }\n\n      var _a = __read(req.args, 2),\n          x = _a[0],\n          y = _a[1];\n\n      return success(x % y);\n    },\n    pow: function (req) {\n      var err;\n\n      if (err = checkForArgumentsCount(req, 2)) {\n        return err;\n      }\n\n      var _a = __read(req.args, 2),\n          x = _a[0],\n          y = _a[1];\n\n      return success(Math.pow(x, y));\n    },\n    log: function (req) {\n      var err;\n\n      if (err = checkForArgumentsCount(req, 2)) {\n        return err;\n      }\n\n      var _a = __read(req.args, 2),\n          x = _a[0],\n          y = _a[1];\n\n      return success(Math.log(y) / Math.log(x));\n    }\n  },\n  cmp: {\n    gt: function (req) {\n      var err;\n\n      if (err = checkForArgumentsCount(req, 2)) {\n        return err;\n      }\n\n      var _a = __read(req.args, 2),\n          x = _a[0],\n          y = _a[1];\n\n      return success(x > y);\n    },\n    gte: function (req) {\n      var err;\n\n      if (err = checkForArgumentsCount(req, 2)) {\n        return err;\n      }\n\n      var _a = __read(req.args, 2),\n          x = _a[0],\n          y = _a[1];\n\n      return success(x >= y);\n    },\n    lt: function (req) {\n      var err;\n\n      if (err = checkForArgumentsCount(req, 2)) {\n        return err;\n      }\n\n      var _a = __read(req.args, 2),\n          x = _a[0],\n          y = _a[1];\n\n      return success(x < y);\n    },\n    lte: function (req) {\n      var err;\n\n      if (err = checkForArgumentsCount(req, 2)) {\n        return err;\n      }\n\n      var _a = __read(req.args, 2),\n          x = _a[0],\n          y = _a[1];\n\n      return success(x <= y);\n    },\n    cmp: function (req) {\n      var err;\n\n      if (err = checkForArgumentsCount(req, 2)) {\n        return err;\n      }\n\n      var _a = __read(req.args, 2),\n          x = _a[0],\n          y = _a[1];\n\n      return success(x === y ? 0 : x > y ? 1 : -1);\n    }\n  },\n  array: {\n    sum: function (req) {\n      var err;\n\n      if (err = checkForArgumentsCount(req, 1)) {\n        return err;\n      }\n\n      var _a = __read(req.args, 1),\n          xs = _a[0];\n\n      return success(xs.reduce(function (agg, cur) {\n        return agg + cur;\n      }, 0));\n    },\n    dedup: function (req) {\n      var err;\n\n      if (err = checkForArgumentsCount(req, 1)) {\n        return err;\n      }\n\n      var _a = __read(req.args, 1),\n          xs = _a[0];\n\n      var set = new Set(xs);\n      return success(Array.from(set));\n    },\n    intersect: function (req) {\n      var err;\n\n      if (err = checkForArgumentsCount(req, 2)) {\n        return err;\n      }\n\n      var _a = __read(req.args, 2),\n          xs = _a[0],\n          ys = _a[1];\n\n      var intersection = xs.filter(function (x) {\n        return ys.includes(x);\n      });\n      return success(intersection);\n    },\n    diff: function (req) {\n      var err;\n\n      if (err = checkForArgumentsCount(req, 2)) {\n        return err;\n      }\n\n      var _a = __read(req.args, 2),\n          xs = _a[0],\n          ys = _a[1];\n\n      var diff = xs.filter(function (x) {\n        return !ys.includes(x);\n      });\n      return success(diff);\n    },\n    sdiff: function (req) {\n      var err;\n\n      if (err = checkForArgumentsCount(req, 2)) {\n        return err;\n      }\n\n      var _a = __read(req.args, 2),\n          xs = _a[0],\n          ys = _a[1];\n\n      var sdiff = __spreadArray(__spreadArray([], __read(xs.filter(function (y) {\n        return !ys.includes(y);\n      })), false), __read(ys.filter(function (x) {\n        return !xs.includes(x);\n      })), false);\n\n      return success(sdiff);\n    }\n  }\n};\n\nvar checkForArgumentsCount = function (req, count) {\n  if (req.args.length !== count) {\n    return error(\"Expected \".concat(count, \" argument(s). Got \").concat(req.args.length));\n  }\n};","map":{"version":3,"mappings":"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","names":["success","result","retCode","commonTypes_1","error","errorNotImpl","methodName","exports","peer","identify","timestamp_ms","Date","now","timestamp_sec","Math","floor","is_connected","connect","get_contact","timeout","req","args","length","durationMs","message","Promise","resolve","setTimeout","res","kad","neighborhood","merge","srv","list","create","get_interface","resolve_alias","add_alias","remove","dist","add_module_from_vault","add_module","add_blueprint","make_module_config","load_module_config","default_module_config","make_blueprint","load_blueprint","list_modules","get_module_interface","list_blueprints","script","add","op","noop","array","array_length","identity","concat","incorrectArgIndices","map","x","i","Array","isArray","filter","_a","_b","_","index","str","join","apply","string_to_b58","TextEncoder","encode","string_from_b58","TextDecoder","decode","bytes_to_b58","argumentArray","Uint8Array","bytes_from_b58","from","sha256_string","input","digestOnly","asBytes","inBuffer","Buffer_1","sha2_1","digest","multihash","outBytes","bytes","concat_strings","__spreadArray","debug","stringify","out","math","err","checkForArgumentsCount","y","sub","mul","fmul","div","rem","pow","log","cmp","gt","gte","lt","lte","sum","xs","reduce","agg","cur","dedup","set","Set","intersect","ys","intersection","includes","diff","sdiff","__read","count"],"sources":["/Users/mgrok/Projects/fluence-projects/examples/quickstart/1-browser-to-browser/node_modules/@fluencelabs/fluence/src/internal/builtins/common.ts"],"sourcesContent":["/*\n * Copyright 2021 Fluence Labs Limited\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { encode, decode } from 'bs58';\nimport { sha256 } from 'multiformats/hashes/sha2';\nimport { CallServiceResult } from '@fluencelabs/avm';\n\nimport { GenericCallServiceHandler, ResultCodes } from '../commonTypes';\nimport { jsonify } from '../utils';\nimport Buffer from '../Buffer';\n\nconst success = (result: any): CallServiceResult => {\n    return {\n        result: result,\n        retCode: ResultCodes.success,\n    };\n};\n\nconst error = (error: string): CallServiceResult => {\n    return {\n        result: error,\n        retCode: ResultCodes.error,\n    };\n};\n\nconst errorNotImpl = (methodName: string) => {\n    return error(`The JS implementation of Peer does not support \"${methodName}\"`);\n};\n\nexport const builtInServices: Record<string, Record<string, GenericCallServiceHandler>> = {\n    peer: {\n        identify: () => {\n            return errorNotImpl('peer.identify');\n        },\n\n        timestamp_ms: () => {\n            return success(Date.now());\n        },\n\n        timestamp_sec: () => {\n            return success(Math.floor(Date.now() / 1000));\n        },\n\n        is_connected: () => {\n            return errorNotImpl('peer.is_connected');\n        },\n\n        connect: () => {\n            return errorNotImpl('peer.connect');\n        },\n\n        get_contact: () => {\n            return errorNotImpl('peer.get_contact');\n        },\n\n        timeout: (req) => {\n            if (req.args.length !== 2) {\n                return error('timeout accepts exactly two arguments: timeout duration in ms and a message string');\n            }\n            const durationMs = req.args[0];\n            const message = req.args[1];\n\n            return new Promise((resolve) => {\n                setTimeout(() => {\n                    const res = success(message);\n                    resolve(res);\n                }, durationMs);\n            });\n        },\n    },\n\n    kad: {\n        neighborhood: () => {\n            return errorNotImpl('kad.neighborhood');\n        },\n\n        merge: () => {\n            return errorNotImpl('kad.merge');\n        },\n    },\n\n    srv: {\n        list: () => {\n            return errorNotImpl('srv.list');\n        },\n\n        create: () => {\n            return errorNotImpl('srv.create');\n        },\n\n        get_interface: () => {\n            return errorNotImpl('srv.get_interface');\n        },\n\n        resolve_alias: () => {\n            return errorNotImpl('srv.resolve_alias');\n        },\n\n        add_alias: () => {\n            return errorNotImpl('srv.add_alias');\n        },\n\n        remove: () => {\n            return errorNotImpl('srv.remove');\n        },\n    },\n\n    dist: {\n        add_module_from_vault: () => {\n            return errorNotImpl('dist.add_module_from_vault');\n        },\n\n        add_module: () => {\n            return errorNotImpl('dist.add_module');\n        },\n\n        add_blueprint: () => {\n            return errorNotImpl('dist.add_blueprint');\n        },\n\n        make_module_config: () => {\n            return errorNotImpl('dist.make_module_config');\n        },\n\n        load_module_config: () => {\n            return errorNotImpl('dist.load_module_config');\n        },\n\n        default_module_config: () => {\n            return errorNotImpl('dist.default_module_config');\n        },\n\n        make_blueprint: () => {\n            return errorNotImpl('dist.make_blueprint');\n        },\n\n        load_blueprint: () => {\n            return errorNotImpl('dist.load_blueprint');\n        },\n\n        list_modules: () => {\n            return errorNotImpl('dist.list_modules');\n        },\n\n        get_module_interface: () => {\n            return errorNotImpl('dist.get_module_interface');\n        },\n\n        list_blueprints: () => {\n            return errorNotImpl('dist.list_blueprints');\n        },\n    },\n\n    script: {\n        add: () => {\n            return errorNotImpl('script.add');\n        },\n\n        remove: () => {\n            return errorNotImpl('script.remove');\n        },\n\n        list: () => {\n            return errorNotImpl('script.list');\n        },\n    },\n\n    op: {\n        noop: () => {\n            return success({});\n        },\n\n        array: (req) => {\n            return success(req.args);\n        },\n\n        array_length: (req) => {\n            if (req.args.length !== 1) {\n                return error('array_length accepts exactly one argument, found: ' + req.args.length);\n            } else {\n                return success(req.args[0].length);\n            }\n        },\n\n        identity: (req) => {\n            if (req.args.length > 1) {\n                return error(`identity accepts up to 1 arguments, received ${req.args.length} arguments`);\n            } else {\n                return success(req.args.length === 0 ? {} : req.args[0]);\n            }\n        },\n\n        concat: (req) => {\n            const incorrectArgIndices = req.args //\n                .map((x, i) => [Array.isArray(x), i])\n                .filter(([isArray, _]) => !isArray)\n                .map(([_, index]) => index);\n\n            if (incorrectArgIndices.length > 0) {\n                const str = incorrectArgIndices.join(', ');\n                return error(`All arguments of 'concat' must be arrays: arguments ${str} are not`);\n            } else {\n                return success([].concat.apply([], req.args));\n            }\n        },\n\n        string_to_b58: (req) => {\n            if (req.args.length !== 1) {\n                return error('string_to_b58 accepts only one string argument');\n            } else {\n                return success(encode(new TextEncoder().encode(req.args[0])));\n            }\n        },\n\n        string_from_b58: (req) => {\n            if (req.args.length !== 1) {\n                return error('string_from_b58 accepts only one string argument');\n            } else {\n                return success(new TextDecoder().decode(decode(req.args[0])));\n            }\n        },\n\n        bytes_to_b58: (req) => {\n            if (req.args.length !== 1 || !Array.isArray(req.args[0])) {\n                return error('bytes_to_b58 accepts only single argument: array of numbers');\n            } else {\n                const argumentArray = req.args[0] as number[];\n                return success(encode(new Uint8Array(argumentArray)));\n            }\n        },\n\n        bytes_from_b58: (req) => {\n            if (req.args.length !== 1) {\n                return error('bytes_from_b58 accepts only one string argument');\n            } else {\n                return success(Array.from(decode(req.args[0])));\n            }\n        },\n\n        sha256_string: async (req) => {\n            if (req.args.length < 1 || req.args.length > 3) {\n                return error(`sha256_string accepts 1-3 arguments, found: ${req.args.length}`);\n            } else {\n                const [input, digestOnly, asBytes] = req.args;\n                const inBuffer = Buffer.from(input);\n                const multihash = await sha256.digest(inBuffer);\n\n                const outBytes = digestOnly ? multihash.digest : multihash.bytes;\n                const res = asBytes ? Array.from(outBytes) : encode(outBytes);\n\n                return success(res);\n            }\n        },\n\n        concat_strings: (req) => {\n            const res = ''.concat(...req.args);\n            return success(res);\n        },\n    },\n\n    debug: {\n        stringify: (req) => {\n            let out;\n\n            if (req.args.length === 0) {\n                out = '<empty argument list>';\n            } else if (req.args.length === 1) {\n                out = req.args[0];\n            } else {\n                out = req.args;\n            }\n\n            return success(jsonify(out));\n        },\n    },\n\n    math: {\n        add: (req) => {\n            let err;\n            if ((err = checkForArgumentsCount(req, 2))) {\n                return err;\n            }\n            const [x, y] = req.args;\n            return success(x + y);\n        },\n\n        sub: (req) => {\n            let err;\n            if ((err = checkForArgumentsCount(req, 2))) {\n                return err;\n            }\n            const [x, y] = req.args;\n            return success(x - y);\n        },\n\n        mul: (req) => {\n            let err;\n            if ((err = checkForArgumentsCount(req, 2))) {\n                return err;\n            }\n            const [x, y] = req.args;\n            return success(x * y);\n        },\n\n        fmul: (req) => {\n            let err;\n            if ((err = checkForArgumentsCount(req, 2))) {\n                return err;\n            }\n            const [x, y] = req.args;\n            return success(Math.floor(x * y));\n        },\n\n        div: (req) => {\n            let err;\n            if ((err = checkForArgumentsCount(req, 2))) {\n                return err;\n            }\n            const [x, y] = req.args;\n            return success(Math.floor(x / y));\n        },\n\n        rem: (req) => {\n            let err;\n            if ((err = checkForArgumentsCount(req, 2))) {\n                return err;\n            }\n            const [x, y] = req.args;\n            return success(x % y);\n        },\n\n        pow: (req) => {\n            let err;\n            if ((err = checkForArgumentsCount(req, 2))) {\n                return err;\n            }\n            const [x, y] = req.args;\n            return success(Math.pow(x, y));\n        },\n\n        log: (req) => {\n            let err;\n            if ((err = checkForArgumentsCount(req, 2))) {\n                return err;\n            }\n            const [x, y] = req.args;\n            return success(Math.log(y) / Math.log(x));\n        },\n    },\n\n    cmp: {\n        gt: (req) => {\n            let err;\n            if ((err = checkForArgumentsCount(req, 2))) {\n                return err;\n            }\n            const [x, y] = req.args;\n            return success(x > y);\n        },\n\n        gte: (req) => {\n            let err;\n            if ((err = checkForArgumentsCount(req, 2))) {\n                return err;\n            }\n            const [x, y] = req.args;\n            return success(x >= y);\n        },\n\n        lt: (req) => {\n            let err;\n            if ((err = checkForArgumentsCount(req, 2))) {\n                return err;\n            }\n            const [x, y] = req.args;\n            return success(x < y);\n        },\n\n        lte: (req) => {\n            let err;\n            if ((err = checkForArgumentsCount(req, 2))) {\n                return err;\n            }\n            const [x, y] = req.args;\n            return success(x <= y);\n        },\n\n        cmp: (req) => {\n            let err;\n            if ((err = checkForArgumentsCount(req, 2))) {\n                return err;\n            }\n            const [x, y] = req.args;\n            return success(x === y ? 0 : x > y ? 1 : -1);\n        },\n    },\n\n    array: {\n        sum: (req) => {\n            let err;\n            if ((err = checkForArgumentsCount(req, 1))) {\n                return err;\n            }\n            const [xs] = req.args;\n            return success(xs.reduce((agg: any, cur: any) => agg + cur, 0));\n        },\n\n        dedup: (req) => {\n            let err;\n            if ((err = checkForArgumentsCount(req, 1))) {\n                return err;\n            }\n            const [xs] = req.args;\n            const set = new Set(xs);\n            return success(Array.from(set));\n        },\n\n        intersect: (req) => {\n            let err;\n            if ((err = checkForArgumentsCount(req, 2))) {\n                return err;\n            }\n            const [xs, ys] = req.args;\n            const intersection = xs.filter((x: any) => ys.includes(x));\n            return success(intersection);\n        },\n\n        diff: (req) => {\n            let err;\n            if ((err = checkForArgumentsCount(req, 2))) {\n                return err;\n            }\n            const [xs, ys] = req.args;\n            const diff = xs.filter((x: unknown) => !ys.includes(x));\n            return success(diff);\n        },\n\n        sdiff: (req) => {\n            let err;\n            if ((err = checkForArgumentsCount(req, 2))) {\n                return err;\n            }\n            const [xs, ys] = req.args;\n            const sdiff = [\n                // force new line\n                ...xs.filter((y: unknown) => !ys.includes(y)),\n                ...ys.filter((x: unknown) => !xs.includes(x)),\n            ];\n            return success(sdiff);\n        },\n    },\n} as const;\n\nconst checkForArgumentsCount = (req: { args: Array<unknown> }, count: number) => {\n    if (req.args.length !== count) {\n        return error(`Expected ${count} argument(s). Got ${req.args.length}`);\n    }\n};\n"]},"metadata":{},"sourceType":"script"}