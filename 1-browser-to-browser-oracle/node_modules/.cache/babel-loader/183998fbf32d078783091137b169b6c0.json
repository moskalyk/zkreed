{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.spawn = void 0;\n\nconst debug_1 = __importDefault(require(\"debug\"));\n\nconst observable_fns_1 = require(\"observable-fns\");\n\nconst common_1 = require(\"../common\");\n\nconst promise_1 = require(\"../promise\");\n\nconst symbols_1 = require(\"../symbols\");\n\nconst master_1 = require(\"../types/master\");\n\nconst invocation_proxy_1 = require(\"./invocation-proxy\");\n\nconst debugMessages = debug_1.default(\"threads:master:messages\");\nconst debugSpawn = debug_1.default(\"threads:master:spawn\");\nconst debugThreadUtils = debug_1.default(\"threads:master:thread-utils\");\n\nconst isInitMessage = data => data && data.type === \"init\";\n\nconst isUncaughtErrorMessage = data => data && data.type === \"uncaughtError\";\n\nconst initMessageTimeout = typeof process !== \"undefined\" && process.env.THREADS_WORKER_INIT_TIMEOUT ? Number.parseInt(process.env.THREADS_WORKER_INIT_TIMEOUT, 10) : 10000;\n\nfunction withTimeout(promise, timeoutInMs, errorMessage) {\n  return __awaiter(this, void 0, void 0, function* () {\n    let timeoutHandle;\n    const timeout = new Promise((resolve, reject) => {\n      timeoutHandle = setTimeout(() => reject(Error(errorMessage)), timeoutInMs);\n    });\n    const result = yield Promise.race([promise, timeout]);\n    clearTimeout(timeoutHandle);\n    return result;\n  });\n}\n\nfunction receiveInitMessage(worker) {\n  return new Promise((resolve, reject) => {\n    const messageHandler = event => {\n      debugMessages(\"Message from worker before finishing initialization:\", event.data);\n\n      if (isInitMessage(event.data)) {\n        worker.removeEventListener(\"message\", messageHandler);\n        resolve(event.data);\n      } else if (isUncaughtErrorMessage(event.data)) {\n        worker.removeEventListener(\"message\", messageHandler);\n        reject(common_1.deserialize(event.data.error));\n      }\n    };\n\n    worker.addEventListener(\"message\", messageHandler);\n  });\n}\n\nfunction createEventObservable(worker, workerTermination) {\n  return new observable_fns_1.Observable(observer => {\n    const messageHandler = messageEvent => {\n      const workerEvent = {\n        type: master_1.WorkerEventType.message,\n        data: messageEvent.data\n      };\n      observer.next(workerEvent);\n    };\n\n    const rejectionHandler = errorEvent => {\n      debugThreadUtils(\"Unhandled promise rejection event in thread:\", errorEvent);\n      const workerEvent = {\n        type: master_1.WorkerEventType.internalError,\n        error: Error(errorEvent.reason)\n      };\n      observer.next(workerEvent);\n    };\n\n    worker.addEventListener(\"message\", messageHandler);\n    worker.addEventListener(\"unhandledrejection\", rejectionHandler);\n    workerTermination.then(() => {\n      const terminationEvent = {\n        type: master_1.WorkerEventType.termination\n      };\n      worker.removeEventListener(\"message\", messageHandler);\n      worker.removeEventListener(\"unhandledrejection\", rejectionHandler);\n      observer.next(terminationEvent);\n      observer.complete();\n    });\n  });\n}\n\nfunction createTerminator(worker) {\n  const [termination, resolver] = promise_1.createPromiseWithResolver();\n\n  const terminate = () => __awaiter(this, void 0, void 0, function* () {\n    debugThreadUtils(\"Terminating worker\"); // Newer versions of worker_threads workers return a promise\n\n    yield worker.terminate();\n    resolver();\n  });\n\n  return {\n    terminate,\n    termination\n  };\n}\n\nfunction setPrivateThreadProps(raw, worker, workerEvents, terminate) {\n  const workerErrors = workerEvents.filter(event => event.type === master_1.WorkerEventType.internalError).map(errorEvent => errorEvent.error); // tslint:disable-next-line prefer-object-spread\n\n  return Object.assign(raw, {\n    [symbols_1.$errors]: workerErrors,\n    [symbols_1.$events]: workerEvents,\n    [symbols_1.$terminate]: terminate,\n    [symbols_1.$worker]: worker\n  });\n}\n/**\n * Spawn a new thread. Takes a fresh worker instance, wraps it in a thin\n * abstraction layer to provide the transparent API and verifies that\n * the worker has initialized successfully.\n *\n * @param worker Instance of `Worker`. Either a web worker, `worker_threads` worker or `tiny-worker` worker.\n * @param [options]\n * @param [options.timeout] Init message timeout. Default: 10000 or set by environment variable.\n */\n\n\nfunction spawn(worker, options) {\n  return __awaiter(this, void 0, void 0, function* () {\n    debugSpawn(\"Initializing new thread\");\n    const timeout = options && options.timeout ? options.timeout : initMessageTimeout;\n    const initMessage = yield withTimeout(receiveInitMessage(worker), timeout, `Timeout: Did not receive an init message from worker after ${timeout}ms. Make sure the worker calls expose().`);\n    const exposed = initMessage.exposed;\n    const {\n      termination,\n      terminate\n    } = createTerminator(worker);\n    const events = createEventObservable(worker, termination);\n\n    if (exposed.type === \"function\") {\n      const proxy = invocation_proxy_1.createProxyFunction(worker);\n      return setPrivateThreadProps(proxy, worker, events, terminate);\n    } else if (exposed.type === \"module\") {\n      const proxy = invocation_proxy_1.createProxyModule(worker, exposed.methods);\n      return setPrivateThreadProps(proxy, worker, events, terminate);\n    } else {\n      const type = exposed.type;\n      throw Error(`Worker init message states unexpected type of expose(): ${type}`);\n    }\n  });\n}\n\nexports.spawn = spawn;","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__importDefault","mod","__esModule","Object","defineProperty","exports","spawn","debug_1","require","observable_fns_1","common_1","promise_1","symbols_1","master_1","invocation_proxy_1","debugMessages","default","debugSpawn","debugThreadUtils","isInitMessage","data","type","isUncaughtErrorMessage","initMessageTimeout","process","env","THREADS_WORKER_INIT_TIMEOUT","Number","parseInt","withTimeout","promise","timeoutInMs","errorMessage","timeoutHandle","timeout","setTimeout","Error","race","clearTimeout","receiveInitMessage","worker","messageHandler","event","removeEventListener","deserialize","error","addEventListener","createEventObservable","workerTermination","Observable","observer","messageEvent","workerEvent","WorkerEventType","message","rejectionHandler","errorEvent","internalError","reason","terminationEvent","termination","complete","createTerminator","resolver","createPromiseWithResolver","terminate","setPrivateThreadProps","raw","workerEvents","workerErrors","filter","map","assign","$errors","$events","$terminate","$worker","options","initMessage","exposed","events","proxy","createProxyFunction","createProxyModule","methods"],"sources":["/Users/mgrok/Projects/fluence-projects/examples/quickstart/1-browser-to-browser/node_modules/threads/dist/master/spawn.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.spawn = void 0;\nconst debug_1 = __importDefault(require(\"debug\"));\nconst observable_fns_1 = require(\"observable-fns\");\nconst common_1 = require(\"../common\");\nconst promise_1 = require(\"../promise\");\nconst symbols_1 = require(\"../symbols\");\nconst master_1 = require(\"../types/master\");\nconst invocation_proxy_1 = require(\"./invocation-proxy\");\nconst debugMessages = debug_1.default(\"threads:master:messages\");\nconst debugSpawn = debug_1.default(\"threads:master:spawn\");\nconst debugThreadUtils = debug_1.default(\"threads:master:thread-utils\");\nconst isInitMessage = (data) => data && data.type === \"init\";\nconst isUncaughtErrorMessage = (data) => data && data.type === \"uncaughtError\";\nconst initMessageTimeout = typeof process !== \"undefined\" && process.env.THREADS_WORKER_INIT_TIMEOUT\n    ? Number.parseInt(process.env.THREADS_WORKER_INIT_TIMEOUT, 10)\n    : 10000;\nfunction withTimeout(promise, timeoutInMs, errorMessage) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let timeoutHandle;\n        const timeout = new Promise((resolve, reject) => {\n            timeoutHandle = setTimeout(() => reject(Error(errorMessage)), timeoutInMs);\n        });\n        const result = yield Promise.race([\n            promise,\n            timeout\n        ]);\n        clearTimeout(timeoutHandle);\n        return result;\n    });\n}\nfunction receiveInitMessage(worker) {\n    return new Promise((resolve, reject) => {\n        const messageHandler = ((event) => {\n            debugMessages(\"Message from worker before finishing initialization:\", event.data);\n            if (isInitMessage(event.data)) {\n                worker.removeEventListener(\"message\", messageHandler);\n                resolve(event.data);\n            }\n            else if (isUncaughtErrorMessage(event.data)) {\n                worker.removeEventListener(\"message\", messageHandler);\n                reject(common_1.deserialize(event.data.error));\n            }\n        });\n        worker.addEventListener(\"message\", messageHandler);\n    });\n}\nfunction createEventObservable(worker, workerTermination) {\n    return new observable_fns_1.Observable(observer => {\n        const messageHandler = ((messageEvent) => {\n            const workerEvent = {\n                type: master_1.WorkerEventType.message,\n                data: messageEvent.data\n            };\n            observer.next(workerEvent);\n        });\n        const rejectionHandler = ((errorEvent) => {\n            debugThreadUtils(\"Unhandled promise rejection event in thread:\", errorEvent);\n            const workerEvent = {\n                type: master_1.WorkerEventType.internalError,\n                error: Error(errorEvent.reason)\n            };\n            observer.next(workerEvent);\n        });\n        worker.addEventListener(\"message\", messageHandler);\n        worker.addEventListener(\"unhandledrejection\", rejectionHandler);\n        workerTermination.then(() => {\n            const terminationEvent = {\n                type: master_1.WorkerEventType.termination\n            };\n            worker.removeEventListener(\"message\", messageHandler);\n            worker.removeEventListener(\"unhandledrejection\", rejectionHandler);\n            observer.next(terminationEvent);\n            observer.complete();\n        });\n    });\n}\nfunction createTerminator(worker) {\n    const [termination, resolver] = promise_1.createPromiseWithResolver();\n    const terminate = () => __awaiter(this, void 0, void 0, function* () {\n        debugThreadUtils(\"Terminating worker\");\n        // Newer versions of worker_threads workers return a promise\n        yield worker.terminate();\n        resolver();\n    });\n    return { terminate, termination };\n}\nfunction setPrivateThreadProps(raw, worker, workerEvents, terminate) {\n    const workerErrors = workerEvents\n        .filter(event => event.type === master_1.WorkerEventType.internalError)\n        .map(errorEvent => errorEvent.error);\n    // tslint:disable-next-line prefer-object-spread\n    return Object.assign(raw, {\n        [symbols_1.$errors]: workerErrors,\n        [symbols_1.$events]: workerEvents,\n        [symbols_1.$terminate]: terminate,\n        [symbols_1.$worker]: worker\n    });\n}\n/**\n * Spawn a new thread. Takes a fresh worker instance, wraps it in a thin\n * abstraction layer to provide the transparent API and verifies that\n * the worker has initialized successfully.\n *\n * @param worker Instance of `Worker`. Either a web worker, `worker_threads` worker or `tiny-worker` worker.\n * @param [options]\n * @param [options.timeout] Init message timeout. Default: 10000 or set by environment variable.\n */\nfunction spawn(worker, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        debugSpawn(\"Initializing new thread\");\n        const timeout = options && options.timeout ? options.timeout : initMessageTimeout;\n        const initMessage = yield withTimeout(receiveInitMessage(worker), timeout, `Timeout: Did not receive an init message from worker after ${timeout}ms. Make sure the worker calls expose().`);\n        const exposed = initMessage.exposed;\n        const { termination, terminate } = createTerminator(worker);\n        const events = createEventObservable(worker, termination);\n        if (exposed.type === \"function\") {\n            const proxy = invocation_proxy_1.createProxyFunction(worker);\n            return setPrivateThreadProps(proxy, worker, events, terminate);\n        }\n        else if (exposed.type === \"module\") {\n            const proxy = invocation_proxy_1.createProxyModule(worker, exposed.methods);\n            return setPrivateThreadProps(proxy, worker, events, terminate);\n        }\n        else {\n            const type = exposed.type;\n            throw Error(`Worker init message states unexpected type of expose(): ${type}`);\n        }\n    });\n}\nexports.spawn = spawn;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}