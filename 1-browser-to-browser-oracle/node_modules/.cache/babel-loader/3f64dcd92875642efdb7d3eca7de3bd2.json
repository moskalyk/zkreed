{"ast":null,"code":"var _jsxFileName = \"/Users/mgrok/Projects/fluence-projects/examples/quickstart/1-browser-to-browser/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.scss';\nimport { Fluence } from '@fluencelabs/fluence';\nimport { krasnodar } from '@fluencelabs/fluence-network-environment';\nimport { registerHelloWorld, sayHello, getRelayTime, tellFortune } from './_aqua/getting-started';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst relayNodes = [krasnodar[4], krasnodar[5], krasnodar[6]]; // import {\n//   registerHelloWorld,\n//   sayHello,\n//   getRelayTime,\n//   tellFortune,\n// } from \"./_aqua/hello-world\"; // (2)\n\nfunction App() {\n  _s();\n\n  const [isConnected, setIsConnected] = useState(false);\n  const [helloMessage, setHelloMessage] = useState(null);\n  const [peerIdInput, setPeerIdInput] = useState('');\n  const [relayPeerIdInput, setRelayPeerIdInput] = useState('');\n\n  const connect = async relayPeerId => {\n    try {\n      await Fluence.start({\n        connectTo: relayPeerId\n      });\n      setIsConnected(true); // Register handler for this call in aqua:\n      // HelloPeer.hello(%init_peer_id%)\n\n      registerHelloWorld({\n        hello: str => {\n          console.log(str);\n        },\n        getFortune: async () => {\n          await new Promise(resolve => {\n            setTimeout(resolve, 1000);\n          });\n          return \"Wealth awaits you very soon.\";\n        }\n      }); // registerHelloPeer({\n      //     hello: (from) => {\n      //         setHelloMessage('Hello from: \\n' + from);\n      //         return 'Hello back to you, \\n' + from;\n      //     },\n      // });\n    } catch (err) {\n      console.log('Peer initialization failed', err);\n    }\n  };\n\n  const helloBtnOnClick = async () => {\n    if (!Fluence.getStatus().isConnected) {\n      return;\n    }\n\n    console.log(await sayHello()); // (4)\n\n    console.log(await tellFortune()); // (6)\n\n    const relayTime = await getRelayTime();\n    console.log(\"The relay time is: ${relayTime}\"); // Using aqua is as easy as calling a javascript funсtion\n    // const res = await sayHello(peerIdInput, relayPeerIdInput);\n    // setHelloMessage(res);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [isConnected ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Connected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"bold\",\n                children: \"Peer id:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"mono\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  id: \"peerId\",\n                  children: Fluence.getStatus().peerId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn-clipboard\",\n                  onClick: () => copyToClipboard(Fluence.getStatus().peerId),\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"gg-clipboard\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"bold\",\n                children: \"Relay peer id:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"mono\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  id: \"relayId\",\n                  children: Fluence.getStatus().relayPeerId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn-clipboard\",\n                  onClick: () => copyToClipboard(Fluence.getStatus().relayPeerId),\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"gg-clipboard\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Say hello!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"p\",\n            children: \"Now try opening a new tab with the same application. Copy paste the peer id and relay from the second tab and say hello!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label bold\",\n              children: \"Target peer id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"targetPeerId\",\n              className: \"input\",\n              type: \"text\",\n              onChange: e => setPeerIdInput(e.target.value),\n              value: peerIdInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label bold\",\n              children: \"Target relay\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"targetRelayId\",\n              className: \"input\",\n              type: \"text\",\n              onChange: e => setRelayPeerIdInput(e.target.value),\n              value: relayPeerIdInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-hello\",\n              onClick: helloBtnOnClick,\n              children: \"say hello\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Intro 1: P2P browser-to-browser\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Pick a relay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: relayNodes.map(x => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mono\",\n              children: x.peerId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: () => connect(x.multiaddr),\n              children: \"Connect\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 37\n            }, this)]\n          }, x.peerId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), helloMessage && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"message\",\n          children: [\" \", helloMessage, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"9H5GHTggrCjQBTDQx5bMhBLzRLA=\");\n\n_c = App;\n\nconst copyToClipboard = text => {\n  navigator.clipboard.writeText(text);\n};\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","logo","Fluence","krasnodar","registerHelloWorld","sayHello","getRelayTime","tellFortune","relayNodes","App","isConnected","setIsConnected","helloMessage","setHelloMessage","peerIdInput","setPeerIdInput","relayPeerIdInput","setRelayPeerIdInput","connect","relayPeerId","start","connectTo","hello","str","console","log","getFortune","Promise","resolve","setTimeout","err","helloBtnOnClick","getStatus","relayTime","peerId","copyToClipboard","e","target","value","map","x","multiaddr","text","navigator","clipboard","writeText"],"sources":["/Users/mgrok/Projects/fluence-projects/examples/quickstart/1-browser-to-browser/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport logo from './logo.svg';\nimport './App.scss';\n\nimport { Fluence } from '@fluencelabs/fluence';\nimport { krasnodar } from '@fluencelabs/fluence-network-environment';\nimport { registerHelloWorld,\n  sayHello,\n  getRelayTime,\n  tellFortune, } from './_aqua/getting-started';\n\nconst relayNodes = [krasnodar[4], krasnodar[5], krasnodar[6]];\n\n// import {\n//   registerHelloWorld,\n//   sayHello,\n//   getRelayTime,\n//   tellFortune,\n// } from \"./_aqua/hello-world\"; // (2)\n\nfunction App() {\n    const [isConnected, setIsConnected] = useState<boolean>(false);\n    const [helloMessage, setHelloMessage] = useState<string | null>(null);\n\n    const [peerIdInput, setPeerIdInput] = useState<string>('');\n    const [relayPeerIdInput, setRelayPeerIdInput] = useState<string>('');\n\n    const connect = async (relayPeerId: string) => {\n        try {\n            await Fluence.start({ connectTo: relayPeerId });\n            setIsConnected(true);\n            // Register handler for this call in aqua:\n            // HelloPeer.hello(%init_peer_id%)\n\n            registerHelloWorld({\n                hello: (str: any) => {\n                  console.log(str);\n                },\n                getFortune: async () => {\n                  await new Promise((resolve) => {\n                    setTimeout(resolve, 1000);\n                  });\n                  return \"Wealth awaits you very soon.\";\n                },\n              });\n\n            // registerHelloPeer({\n            //     hello: (from) => {\n            //         setHelloMessage('Hello from: \\n' + from);\n            //         return 'Hello back to you, \\n' + from;\n            //     },\n            // });\n        } catch (err) {\n            console.log('Peer initialization failed', err);\n        }\n    };\n\n    const helloBtnOnClick = async () => {\n        if (!Fluence.getStatus().isConnected) {\n            return;\n        }\n\n        console.log(await sayHello()); // (4)\n\n        console.log(await tellFortune()); // (6)\n\n        const relayTime = await getRelayTime();\n\n        console.log(\"The relay time is: ${relayTime}\");\n\n        // Using aqua is as easy as calling a javascript funсtion\n        // const res = await sayHello(peerIdInput, relayPeerIdInput);\n        // setHelloMessage(res);\n    };\n\n    return (\n        <div className=\"App\">\n            <header>\n                <img src={logo} className=\"logo\" alt=\"logo\" />\n            </header>\n\n            <div className=\"content\">\n                {isConnected ? (\n                    <>\n                        <h1>Connected</h1>\n                        <table>\n                            <tbody>\n                                <tr>\n                                    <td className=\"bold\">Peer id:</td>\n                                    <td className=\"mono\">\n                                        <span id=\"peerId\">{Fluence.getStatus().peerId!}</span>\n                                    </td>\n                                    <td>\n                                        <button\n                                            className=\"btn-clipboard\"\n                                            onClick={() => copyToClipboard(Fluence.getStatus().peerId!)}\n                                        >\n                                            <i className=\"gg-clipboard\"></i>\n                                        </button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className=\"bold\">Relay peer id:</td>\n                                    <td className=\"mono\">\n                                        <span id=\"relayId\">{Fluence.getStatus().relayPeerId}</span>\n                                    </td>\n                                    <td>\n                                        <button\n                                            className=\"btn-clipboard\"\n                                            onClick={() => copyToClipboard(Fluence.getStatus().relayPeerId!)}\n                                        >\n                                            <i className=\"gg-clipboard\"></i>\n                                        </button>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n\n                        <div>\n                            <h2>Say hello!</h2>\n                            <p className=\"p\">\n                                Now try opening a new tab with the same application. Copy paste the peer id and relay\n                                from the second tab and say hello!\n                            </p>\n                            <div className=\"row\">\n                                <label className=\"label bold\">Target peer id</label>\n                                <input\n                                    id=\"targetPeerId\"\n                                    className=\"input\"\n                                    type=\"text\"\n                                    onChange={(e) => setPeerIdInput(e.target.value)}\n                                    value={peerIdInput}\n                                />\n                            </div>\n                            <div className=\"row\">\n                                <label className=\"label bold\">Target relay</label>\n                                <input\n                                    id=\"targetRelayId\"\n                                    className=\"input\"\n                                    type=\"text\"\n                                    onChange={(e) => setRelayPeerIdInput(e.target.value)}\n                                    value={relayPeerIdInput}\n                                />\n                            </div>\n                            <div className=\"row\">\n                                <button className=\"btn btn-hello\" onClick={helloBtnOnClick}>\n                                    say hello\n                                </button>\n                            </div>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <h1>Intro 1: P2P browser-to-browser</h1>\n                        <h2>Pick a relay</h2>\n                        <ul>\n                            {relayNodes.map((x) => (\n                                <li key={x.peerId}>\n                                    <span className=\"mono\">{x.peerId}</span>\n                                    <button className=\"btn\" onClick={() => connect(x.multiaddr)}>\n                                        Connect\n                                    </button>\n                                </li>\n                            ))}\n                        </ul>\n                    </>\n                )}\n\n                {helloMessage && (\n                    <>\n                        <h2>Message</h2>\n                        <div id=\"message\"> {helloMessage} </div>\n                    </>\n                )}\n            </div>\n        </div>\n    );\n}\n\nconst copyToClipboard = (text: string) => {\n    navigator.clipboard.writeText(text);\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}