{"ast":null,"code":"import { BaseDatastore } from './base.js';\nimport { Key } from 'interface-datastore/key';\nimport * as Errors from './errors.js';\nexport class MemoryDatastore extends BaseDatastore {\n  constructor() {\n    super();\n    this.data = {};\n  }\n\n  open() {\n    return Promise.resolve();\n  }\n\n  close() {\n    return Promise.resolve();\n  }\n\n  async put(key, val) {\n    this.data[key.toString()] = val;\n  }\n\n  async get(key) {\n    const exists = await this.has(key);\n    if (!exists) throw Errors.notFoundError();\n    return this.data[key.toString()];\n  }\n\n  async has(key) {\n    return this.data[key.toString()] !== undefined;\n  }\n\n  async delete(key) {\n    delete this.data[key.toString()];\n  }\n\n  async *_all() {\n    yield* Object.entries(this.data).map(_ref => {\n      let [key, value] = _ref;\n      return {\n        key: new Key(key),\n        value\n      };\n    });\n  }\n\n  async *_allKeys() {\n    yield* Object.entries(this.data).map(_ref2 => {\n      let [key] = _ref2;\n      return new Key(key);\n    });\n  }\n\n}","map":{"version":3,"names":["BaseDatastore","Key","Errors","MemoryDatastore","constructor","data","open","Promise","resolve","close","put","key","val","toString","get","exists","has","notFoundError","undefined","delete","_all","Object","entries","map","value","_allKeys"],"sources":["/Users/mgrok/Projects/fluence-projects/examples/quickstart/1-browser-to-browser/node_modules/datastore-core/esm/src/memory.js"],"sourcesContent":["import { BaseDatastore } from './base.js';\nimport { Key } from 'interface-datastore/key';\nimport * as Errors from './errors.js';\nexport class MemoryDatastore extends BaseDatastore {\n  constructor() {\n    super();\n    this.data = {};\n  }\n  open() {\n    return Promise.resolve();\n  }\n  close() {\n    return Promise.resolve();\n  }\n  async put(key, val) {\n    this.data[key.toString()] = val;\n  }\n  async get(key) {\n    const exists = await this.has(key);\n    if (!exists)\n      throw Errors.notFoundError();\n    return this.data[key.toString()];\n  }\n  async has(key) {\n    return this.data[key.toString()] !== undefined;\n  }\n  async delete(key) {\n    delete this.data[key.toString()];\n  }\n  async *_all() {\n    yield* Object.entries(this.data).map(([key, value]) => ({\n      key: new Key(key),\n      value\n    }));\n  }\n  async *_allKeys() {\n    yield* Object.entries(this.data).map(([key]) => new Key(key));\n  }\n}"],"mappings":"AAAA,SAASA,aAAT,QAA8B,WAA9B;AACA,SAASC,GAAT,QAAoB,yBAApB;AACA,OAAO,KAAKC,MAAZ,MAAwB,aAAxB;AACA,OAAO,MAAMC,eAAN,SAA8BH,aAA9B,CAA4C;EACjDI,WAAW,GAAG;IACZ;IACA,KAAKC,IAAL,GAAY,EAAZ;EACD;;EACDC,IAAI,GAAG;IACL,OAAOC,OAAO,CAACC,OAAR,EAAP;EACD;;EACDC,KAAK,GAAG;IACN,OAAOF,OAAO,CAACC,OAAR,EAAP;EACD;;EACQ,MAAHE,GAAG,CAACC,GAAD,EAAMC,GAAN,EAAW;IAClB,KAAKP,IAAL,CAAUM,GAAG,CAACE,QAAJ,EAAV,IAA4BD,GAA5B;EACD;;EACQ,MAAHE,GAAG,CAACH,GAAD,EAAM;IACb,MAAMI,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASL,GAAT,CAArB;IACA,IAAI,CAACI,MAAL,EACE,MAAMb,MAAM,CAACe,aAAP,EAAN;IACF,OAAO,KAAKZ,IAAL,CAAUM,GAAG,CAACE,QAAJ,EAAV,CAAP;EACD;;EACQ,MAAHG,GAAG,CAACL,GAAD,EAAM;IACb,OAAO,KAAKN,IAAL,CAAUM,GAAG,CAACE,QAAJ,EAAV,MAA8BK,SAArC;EACD;;EACW,MAANC,MAAM,CAACR,GAAD,EAAM;IAChB,OAAO,KAAKN,IAAL,CAAUM,GAAG,CAACE,QAAJ,EAAV,CAAP;EACD;;EACU,OAAJO,IAAI,GAAG;IACZ,OAAOC,MAAM,CAACC,OAAP,CAAe,KAAKjB,IAApB,EAA0BkB,GAA1B,CAA8B;MAAA,IAAC,CAACZ,GAAD,EAAMa,KAAN,CAAD;MAAA,OAAmB;QACtDb,GAAG,EAAE,IAAIV,GAAJ,CAAQU,GAAR,CADiD;QAEtDa;MAFsD,CAAnB;IAAA,CAA9B,CAAP;EAID;;EACc,OAARC,QAAQ,GAAG;IAChB,OAAOJ,MAAM,CAACC,OAAP,CAAe,KAAKjB,IAApB,EAA0BkB,GAA1B,CAA8B;MAAA,IAAC,CAACZ,GAAD,CAAD;MAAA,OAAW,IAAIV,GAAJ,CAAQU,GAAR,CAAX;IAAA,CAA9B,CAAP;EACD;;AAlCgD"},"metadata":{},"sourceType":"module"}