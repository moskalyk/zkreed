{"ast":null,"code":"export const hasSymbols = () => typeof Symbol === \"function\";\nexport const hasSymbol = name => hasSymbols() && Boolean(Symbol[name]);\nexport const getSymbol = name => hasSymbol(name) ? Symbol[name] : \"@@\" + name;\nexport function registerObservableSymbol() {\n  if (hasSymbols() && !hasSymbol(\"observable\")) {\n    Symbol.observable = Symbol(\"observable\");\n  }\n}\n\nif (!hasSymbol(\"asyncIterator\")) {\n  Symbol.asyncIterator = Symbol.asyncIterator || Symbol.for(\"Symbol.asyncIterator\");\n}","map":{"version":3,"names":["hasSymbols","Symbol","hasSymbol","name","Boolean","getSymbol","registerObservableSymbol","observable","asyncIterator","for"],"sources":["/Users/mgrok/Projects/fluence-projects/examples/quickstart/1-browser-to-browser/node_modules/observable-fns/dist.esm/_symbols.js"],"sourcesContent":["export const hasSymbols = () => typeof Symbol === \"function\";\nexport const hasSymbol = (name) => hasSymbols() && Boolean(Symbol[name]);\nexport const getSymbol = (name) => hasSymbol(name) ? Symbol[name] : \"@@\" + name;\nexport function registerObservableSymbol() {\n    if (hasSymbols() && !hasSymbol(\"observable\")) {\n        Symbol.observable = Symbol(\"observable\");\n    }\n}\nif (!hasSymbol(\"asyncIterator\")) {\n    Symbol.asyncIterator = Symbol.asyncIterator || Symbol.for(\"Symbol.asyncIterator\");\n}\n"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAG,MAAM,OAAOC,MAAP,KAAkB,UAA3C;AACP,OAAO,MAAMC,SAAS,GAAIC,IAAD,IAAUH,UAAU,MAAMI,OAAO,CAACH,MAAM,CAACE,IAAD,CAAP,CAAnD;AACP,OAAO,MAAME,SAAS,GAAIF,IAAD,IAAUD,SAAS,CAACC,IAAD,CAAT,GAAkBF,MAAM,CAACE,IAAD,CAAxB,GAAiC,OAAOA,IAApE;AACP,OAAO,SAASG,wBAAT,GAAoC;EACvC,IAAIN,UAAU,MAAM,CAACE,SAAS,CAAC,YAAD,CAA9B,EAA8C;IAC1CD,MAAM,CAACM,UAAP,GAAoBN,MAAM,CAAC,YAAD,CAA1B;EACH;AACJ;;AACD,IAAI,CAACC,SAAS,CAAC,eAAD,CAAd,EAAiC;EAC7BD,MAAM,CAACO,aAAP,GAAuBP,MAAM,CAACO,aAAP,IAAwBP,MAAM,CAACQ,GAAP,CAAW,sBAAX,CAA/C;AACH"},"metadata":{},"sourceType":"module"}