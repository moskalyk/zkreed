{"ast":null,"code":"\"use strict\";\n/*\n * Copyright 2022 Fluence Labs Limited\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AVM = void 0;\n\nvar avm_1 = require(\"@fluencelabs/avm\");\n/**\n * @deprecated. AVM run through marine-js infrastructure. This type is needed for backward compatibility with the previous API\n */\n\n\nvar AVM =\n/** @class */\nfunction () {\n  function AVM(fluenceAppService) {\n    this._fluenceAppService = fluenceAppService;\n  }\n\n  AVM.prototype.init = function (logLevel) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  AVM.prototype.terminate = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  AVM.prototype.run = function (air, prevData, data, runParams, callResults) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , (0, avm_1.callAvm)(function (args) {\n          return _this._fluenceAppService.callService('avm', 'invoke', args, undefined);\n        }, runParams, air, prevData, data, callResults)];\n      });\n    });\n  };\n\n  return AVM;\n}();\n\nexports.AVM = AVM;","map":{"version":3,"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA;AAkBA;;;;;AAGA;AAAA;AAAA;EAGI,aAAYA,iBAAZ,EAAgD;IAC5C,KAAKC,kBAAL,GAA0BD,iBAA1B;EACH;;EAEKE,qBAAN,UAAWC,QAAX,EAA6B;;;;;;;;EAAmB,CAA1C;;EAEAD,0BAAN;;;;;;;;EAAmC,CAA7B;;EAEAA,oBAAN,UACIE,GADJ,EAEIC,QAFJ,EAGIC,IAHJ,EAIIC,SAJJ,EAKIC,WALJ,EAKiC;;;;;QAE7B;QAAA;QAAA,EAAO,mBACH,UAACC,IAAD,EAAK;UAAK,YAAI,CAACR,kBAAL,CAAwBS,WAAxB,CAAoC,KAApC,EAA2C,QAA3C,EAAqDD,IAArD,EAA2DE,SAA3D;QAAqE,CAD5E,EAEHJ,SAFG,EAGHH,GAHG,EAIHC,QAJG,EAKHC,IALG,EAMHE,WANG,CAAP;;;EAQH,CAfK;;EAgBV;AAAC,CA3BD;;AAAaI","names":["fluenceAppService","_fluenceAppService","AVM","logLevel","air","prevData","data","runParams","callResults","args","callService","undefined","exports"],"sources":["/Users/mgrok/Projects/fluence-projects/examples/quickstart/1-browser-to-browser/node_modules/@fluencelabs/fluence/src/internal/avm.ts"],"sourcesContent":["/*\n * Copyright 2022 Fluence Labs Limited\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { callAvm, CallResultsArray, InterpreterResult, LogLevel, RunParameters } from '@fluencelabs/avm';\nimport { FluenceAppService } from '@fluencelabs/marine-js';\n\n/**\n * @deprecated. AVM run through marine-js infrastructure. This type is needed for backward compatibility with the previous API\n */\nexport type AvmRunner = {\n    init: (logLevel: LogLevel) => Promise<void>;\n    terminate: () => Promise<void>;\n    run: (\n        air: string,\n        prevData: Uint8Array,\n        data: Uint8Array,\n        params: RunParameters,\n        callResults: CallResultsArray,\n    ) => Promise<InterpreterResult>;\n};\n\n/**\n * @deprecated. AVM run through marine-js infrastructure. This type is needed for backward compatibility with the previous API\n */\nexport class AVM implements AvmRunner {\n    private _fluenceAppService: FluenceAppService;\n\n    constructor(fluenceAppService: FluenceAppService) {\n        this._fluenceAppService = fluenceAppService;\n    }\n\n    async init(logLevel: LogLevel): Promise<void> {}\n\n    async terminate(): Promise<void> {}\n\n    async run(\n        air: string,\n        prevData: Uint8Array,\n        data: Uint8Array,\n        runParams: RunParameters,\n        callResults: CallResultsArray,\n    ): Promise<InterpreterResult> {\n        return callAvm(\n            (args) => this._fluenceAppService.callService('avm', 'invoke', args, undefined),\n            runParams,\n            air,\n            prevData,\n            data,\n            callResults,\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"script"}