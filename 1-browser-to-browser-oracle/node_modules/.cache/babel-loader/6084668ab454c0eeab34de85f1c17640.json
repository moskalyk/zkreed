{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.__ = void 0;\n\nconst guards_1 = require(\"./guards\");\n\nfunction isUnknown(x) {\n  return true;\n}\n\nfunction isNumber(x) {\n  return typeof x === 'number';\n}\n\nfunction numberIsNaN(x) {\n  return Number.isNaN(x);\n}\n\nfunction isString(x) {\n  return typeof x === 'string';\n}\n\nfunction isBoolean(x) {\n  return typeof x === 'boolean';\n}\n\nfunction isNullish(x) {\n  return x === null || x === undefined;\n}\n\nconst unknownGuard = (0, guards_1.when)(isUnknown);\nconst stringGuard = (0, guards_1.when)(isString);\nconst numberGuard = (0, guards_1.when)(isNumber);\nconst NaNGuard = (0, guards_1.when)(numberIsNaN);\nconst booleanGuard = (0, guards_1.when)(isBoolean);\nconst nullishGuard = (0, guards_1.when)(isNullish);\n/**\n * ### Catch All wildcard\n * `__` is wildcard pattern, matching **any value**.\n *\n * `__.string` is wildcard pattern matching any **string**.\n *\n * `__.number` is wildcard pattern matching any **number**.\n *\n * `__.NaN` is wildcard pattern matching **NaN**\n *\n * `__.boolean` is wildcard pattern matching any **boolean**.\n *\n * `__.nullish` is wildcard pattern matching **null** or **undefined**.\n * @example\n *  match(value)\n *   .with(__, () => 'will always match')\n *   .with(__.string, () => 'will match on strings only')\n *   .with(__.number, () => 'will match on numbers only')\n *   .with(__.NaN, () => 'will match on NaN')\n *   .with(__.boolean, () => 'will match on booleans only')\n *   .with(__.nullish, () => 'will match on null or undefined only')\n */\n\nexports.__ = Object.assign(unknownGuard, {\n  string: stringGuard,\n  number: numberGuard,\n  NaN: NaNGuard,\n  boolean: booleanGuard,\n  nullish: nullishGuard\n});","map":{"version":3,"names":["Object","defineProperty","exports","value","__","guards_1","require","isUnknown","x","isNumber","numberIsNaN","Number","isNaN","isString","isBoolean","isNullish","undefined","unknownGuard","when","stringGuard","numberGuard","NaNGuard","booleanGuard","nullishGuard","assign","string","number","NaN","boolean","nullish"],"sources":["/Users/mgrok/Projects/fluence-projects/examples/quickstart/1-browser-to-browser/node_modules/ts-pattern/lib/wildcards.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.__ = void 0;\nconst guards_1 = require(\"./guards\");\nfunction isUnknown(x) {\n    return true;\n}\nfunction isNumber(x) {\n    return typeof x === 'number';\n}\nfunction numberIsNaN(x) {\n    return Number.isNaN(x);\n}\nfunction isString(x) {\n    return typeof x === 'string';\n}\nfunction isBoolean(x) {\n    return typeof x === 'boolean';\n}\nfunction isNullish(x) {\n    return x === null || x === undefined;\n}\nconst unknownGuard = (0, guards_1.when)(isUnknown);\nconst stringGuard = (0, guards_1.when)(isString);\nconst numberGuard = (0, guards_1.when)(isNumber);\nconst NaNGuard = (0, guards_1.when)(numberIsNaN);\nconst booleanGuard = (0, guards_1.when)(isBoolean);\nconst nullishGuard = (0, guards_1.when)(isNullish);\n/**\n * ### Catch All wildcard\n * `__` is wildcard pattern, matching **any value**.\n *\n * `__.string` is wildcard pattern matching any **string**.\n *\n * `__.number` is wildcard pattern matching any **number**.\n *\n * `__.NaN` is wildcard pattern matching **NaN**\n *\n * `__.boolean` is wildcard pattern matching any **boolean**.\n *\n * `__.nullish` is wildcard pattern matching **null** or **undefined**.\n * @example\n *  match(value)\n *   .with(__, () => 'will always match')\n *   .with(__.string, () => 'will match on strings only')\n *   .with(__.number, () => 'will match on numbers only')\n *   .with(__.NaN, () => 'will match on NaN')\n *   .with(__.boolean, () => 'will match on booleans only')\n *   .with(__.nullish, () => 'will match on null or undefined only')\n */\nexports.__ = Object.assign(unknownGuard, {\n    string: stringGuard,\n    number: numberGuard,\n    NaN: NaNGuard,\n    boolean: booleanGuard,\n    nullish: nullishGuard,\n});\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,EAAR,GAAa,KAAK,CAAlB;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,SAASC,SAAT,CAAmBC,CAAnB,EAAsB;EAClB,OAAO,IAAP;AACH;;AACD,SAASC,QAAT,CAAkBD,CAAlB,EAAqB;EACjB,OAAO,OAAOA,CAAP,KAAa,QAApB;AACH;;AACD,SAASE,WAAT,CAAqBF,CAArB,EAAwB;EACpB,OAAOG,MAAM,CAACC,KAAP,CAAaJ,CAAb,CAAP;AACH;;AACD,SAASK,QAAT,CAAkBL,CAAlB,EAAqB;EACjB,OAAO,OAAOA,CAAP,KAAa,QAApB;AACH;;AACD,SAASM,SAAT,CAAmBN,CAAnB,EAAsB;EAClB,OAAO,OAAOA,CAAP,KAAa,SAApB;AACH;;AACD,SAASO,SAAT,CAAmBP,CAAnB,EAAsB;EAClB,OAAOA,CAAC,KAAK,IAAN,IAAcA,CAAC,KAAKQ,SAA3B;AACH;;AACD,MAAMC,YAAY,GAAG,CAAC,GAAGZ,QAAQ,CAACa,IAAb,EAAmBX,SAAnB,CAArB;AACA,MAAMY,WAAW,GAAG,CAAC,GAAGd,QAAQ,CAACa,IAAb,EAAmBL,QAAnB,CAApB;AACA,MAAMO,WAAW,GAAG,CAAC,GAAGf,QAAQ,CAACa,IAAb,EAAmBT,QAAnB,CAApB;AACA,MAAMY,QAAQ,GAAG,CAAC,GAAGhB,QAAQ,CAACa,IAAb,EAAmBR,WAAnB,CAAjB;AACA,MAAMY,YAAY,GAAG,CAAC,GAAGjB,QAAQ,CAACa,IAAb,EAAmBJ,SAAnB,CAArB;AACA,MAAMS,YAAY,GAAG,CAAC,GAAGlB,QAAQ,CAACa,IAAb,EAAmBH,SAAnB,CAArB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAb,OAAO,CAACE,EAAR,GAAaJ,MAAM,CAACwB,MAAP,CAAcP,YAAd,EAA4B;EACrCQ,MAAM,EAAEN,WAD6B;EAErCO,MAAM,EAAEN,WAF6B;EAGrCO,GAAG,EAAEN,QAHgC;EAIrCO,OAAO,EAAEN,YAJ4B;EAKrCO,OAAO,EAAEN;AAL4B,CAA5B,CAAb"},"metadata":{},"sourceType":"script"}