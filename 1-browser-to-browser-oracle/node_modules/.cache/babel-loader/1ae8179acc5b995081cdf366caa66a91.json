{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Worker = exports.BlobWorker = exports.isWorkerRuntime = exports.Thread = exports.spawn = exports.Pool = void 0;\n\nconst implementation_1 = require(\"./implementation\");\n\nObject.defineProperty(exports, \"isWorkerRuntime\", {\n  enumerable: true,\n  get: function () {\n    return implementation_1.isWorkerRuntime;\n  }\n});\n\nvar pool_1 = require(\"./pool\");\n\nObject.defineProperty(exports, \"Pool\", {\n  enumerable: true,\n  get: function () {\n    return pool_1.Pool;\n  }\n});\n\nvar spawn_1 = require(\"./spawn\");\n\nObject.defineProperty(exports, \"spawn\", {\n  enumerable: true,\n  get: function () {\n    return spawn_1.spawn;\n  }\n});\n\nvar thread_1 = require(\"./thread\");\n\nObject.defineProperty(exports, \"Thread\", {\n  enumerable: true,\n  get: function () {\n    return thread_1.Thread;\n  }\n});\n/** Separate class to spawn workers from source code blobs or strings. */\n\nexports.BlobWorker = implementation_1.getWorkerImplementation().blob;\n/** Worker implementation. Either web worker or a node.js Worker class. */\n\nexports.Worker = implementation_1.getWorkerImplementation().default;","map":{"version":3,"names":["Object","defineProperty","exports","value","Worker","BlobWorker","isWorkerRuntime","Thread","spawn","Pool","implementation_1","require","enumerable","get","pool_1","spawn_1","thread_1","getWorkerImplementation","blob","default"],"sources":["/Users/mgrok/Projects/fluence-projects/examples/quickstart/1-browser-to-browser/node_modules/threads/dist/master/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Worker = exports.BlobWorker = exports.isWorkerRuntime = exports.Thread = exports.spawn = exports.Pool = void 0;\nconst implementation_1 = require(\"./implementation\");\nObject.defineProperty(exports, \"isWorkerRuntime\", { enumerable: true, get: function () { return implementation_1.isWorkerRuntime; } });\nvar pool_1 = require(\"./pool\");\nObject.defineProperty(exports, \"Pool\", { enumerable: true, get: function () { return pool_1.Pool; } });\nvar spawn_1 = require(\"./spawn\");\nObject.defineProperty(exports, \"spawn\", { enumerable: true, get: function () { return spawn_1.spawn; } });\nvar thread_1 = require(\"./thread\");\nObject.defineProperty(exports, \"Thread\", { enumerable: true, get: function () { return thread_1.Thread; } });\n/** Separate class to spawn workers from source code blobs or strings. */\nexports.BlobWorker = implementation_1.getWorkerImplementation().blob;\n/** Worker implementation. Either web worker or a node.js Worker class. */\nexports.Worker = implementation_1.getWorkerImplementation().default;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,MAAR,GAAiBF,OAAO,CAACG,UAAR,GAAqBH,OAAO,CAACI,eAAR,GAA0BJ,OAAO,CAACK,MAAR,GAAiBL,OAAO,CAACM,KAAR,GAAgBN,OAAO,CAACO,IAAR,GAAe,KAAK,CAArH;;AACA,MAAMC,gBAAgB,GAAGC,OAAO,CAAC,kBAAD,CAAhC;;AACAX,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,iBAA/B,EAAkD;EAAEU,UAAU,EAAE,IAAd;EAAoBC,GAAG,EAAE,YAAY;IAAE,OAAOH,gBAAgB,CAACJ,eAAxB;EAA0C;AAAjF,CAAlD;;AACA,IAAIQ,MAAM,GAAGH,OAAO,CAAC,QAAD,CAApB;;AACAX,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,MAA/B,EAAuC;EAAEU,UAAU,EAAE,IAAd;EAAoBC,GAAG,EAAE,YAAY;IAAE,OAAOC,MAAM,CAACL,IAAd;EAAqB;AAA5D,CAAvC;;AACA,IAAIM,OAAO,GAAGJ,OAAO,CAAC,SAAD,CAArB;;AACAX,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,OAA/B,EAAwC;EAAEU,UAAU,EAAE,IAAd;EAAoBC,GAAG,EAAE,YAAY;IAAE,OAAOE,OAAO,CAACP,KAAf;EAAuB;AAA9D,CAAxC;;AACA,IAAIQ,QAAQ,GAAGL,OAAO,CAAC,UAAD,CAAtB;;AACAX,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,QAA/B,EAAyC;EAAEU,UAAU,EAAE,IAAd;EAAoBC,GAAG,EAAE,YAAY;IAAE,OAAOG,QAAQ,CAACT,MAAhB;EAAyB;AAAhE,CAAzC;AACA;;AACAL,OAAO,CAACG,UAAR,GAAqBK,gBAAgB,CAACO,uBAAjB,GAA2CC,IAAhE;AACA;;AACAhB,OAAO,CAACE,MAAR,GAAiBM,gBAAgB,CAACO,uBAAjB,GAA2CE,OAA5D"},"metadata":{},"sourceType":"script"}