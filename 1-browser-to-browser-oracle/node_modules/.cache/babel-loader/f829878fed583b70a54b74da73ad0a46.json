{"ast":null,"code":"import Observable from \"./observable\";\nimport Subject from \"./subject\";\nimport unsubscribe from \"./unsubscribe\"; // TODO: Subject already creates additional observables \"under the hood\",\n//       now we introduce even more. A true native MulticastObservable\n//       would be preferable.\n\n/**\n * Takes a \"cold\" observable and returns a wrapping \"hot\" observable that\n * proxies the input observable's values and errors.\n *\n * An observable is called \"cold\" when its initialization function is run\n * for each new subscriber. This is how observable-fns's `Observable`\n * implementation works.\n *\n * A hot observable is an observable where new subscribers subscribe to\n * the upcoming values of an already-initialiazed observable.\n *\n * The multicast observable will lazily subscribe to the source observable\n * once it has its first own subscriber and will unsubscribe from the\n * source observable when its last own subscriber unsubscribed.\n */\n\nfunction multicast(coldObservable) {\n  const subject = new Subject();\n  let sourceSubscription;\n  let subscriberCount = 0;\n  return new Observable(observer => {\n    // Init source subscription lazily\n    if (!sourceSubscription) {\n      sourceSubscription = coldObservable.subscribe(subject);\n    } // Pipe all events from `subject` into this observable\n\n\n    const subscription = subject.subscribe(observer);\n    subscriberCount++;\n    return () => {\n      subscriberCount--;\n      subscription.unsubscribe(); // Close source subscription once last subscriber has unsubscribed\n\n      if (subscriberCount === 0) {\n        unsubscribe(sourceSubscription);\n        sourceSubscription = undefined;\n      }\n    };\n  });\n}\n\nexport default multicast;","map":{"version":3,"names":["Observable","Subject","unsubscribe","multicast","coldObservable","subject","sourceSubscription","subscriberCount","observer","subscribe","subscription","undefined"],"sources":["/Users/mgrok/Projects/fluence-projects/examples/quickstart/1-browser-to-browser/node_modules/observable-fns/dist.esm/multicast.js"],"sourcesContent":["import Observable from \"./observable\";\nimport Subject from \"./subject\";\nimport unsubscribe from \"./unsubscribe\";\n// TODO: Subject already creates additional observables \"under the hood\",\n//       now we introduce even more. A true native MulticastObservable\n//       would be preferable.\n/**\n * Takes a \"cold\" observable and returns a wrapping \"hot\" observable that\n * proxies the input observable's values and errors.\n *\n * An observable is called \"cold\" when its initialization function is run\n * for each new subscriber. This is how observable-fns's `Observable`\n * implementation works.\n *\n * A hot observable is an observable where new subscribers subscribe to\n * the upcoming values of an already-initialiazed observable.\n *\n * The multicast observable will lazily subscribe to the source observable\n * once it has its first own subscriber and will unsubscribe from the\n * source observable when its last own subscriber unsubscribed.\n */\nfunction multicast(coldObservable) {\n    const subject = new Subject();\n    let sourceSubscription;\n    let subscriberCount = 0;\n    return new Observable(observer => {\n        // Init source subscription lazily\n        if (!sourceSubscription) {\n            sourceSubscription = coldObservable.subscribe(subject);\n        }\n        // Pipe all events from `subject` into this observable\n        const subscription = subject.subscribe(observer);\n        subscriberCount++;\n        return () => {\n            subscriberCount--;\n            subscription.unsubscribe();\n            // Close source subscription once last subscriber has unsubscribed\n            if (subscriberCount === 0) {\n                unsubscribe(sourceSubscription);\n                sourceSubscription = undefined;\n            }\n        };\n    });\n}\nexport default multicast;\n"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,SAAT,CAAmBC,cAAnB,EAAmC;EAC/B,MAAMC,OAAO,GAAG,IAAIJ,OAAJ,EAAhB;EACA,IAAIK,kBAAJ;EACA,IAAIC,eAAe,GAAG,CAAtB;EACA,OAAO,IAAIP,UAAJ,CAAeQ,QAAQ,IAAI;IAC9B;IACA,IAAI,CAACF,kBAAL,EAAyB;MACrBA,kBAAkB,GAAGF,cAAc,CAACK,SAAf,CAAyBJ,OAAzB,CAArB;IACH,CAJ6B,CAK9B;;;IACA,MAAMK,YAAY,GAAGL,OAAO,CAACI,SAAR,CAAkBD,QAAlB,CAArB;IACAD,eAAe;IACf,OAAO,MAAM;MACTA,eAAe;MACfG,YAAY,CAACR,WAAb,GAFS,CAGT;;MACA,IAAIK,eAAe,KAAK,CAAxB,EAA2B;QACvBL,WAAW,CAACI,kBAAD,CAAX;QACAA,kBAAkB,GAAGK,SAArB;MACH;IACJ,CARD;EASH,CAjBM,CAAP;AAkBH;;AACD,eAAeR,SAAf"},"metadata":{},"sourceType":"module"}