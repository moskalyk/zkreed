{"ast":null,"code":"var _jsxFileName = \"/Users/mgrok/Projects/fluence-projects/examples/quickstart/1-browser-to-browser/src/App.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport logo from './logo.svg';\nimport './App.scss';\nimport { Fluence } from '@fluencelabs/fluence';\nimport { krasnodar } from '@fluencelabs/fluence-network-environment';\nimport { registerHelloWorld, getRelayTime } from './_aqua/getting-started';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst relayNodes = [krasnodar[4], krasnodar[5], krasnodar[6]];\n\nfunction rangeSlider() {\n  const el = document.createElement('div');\n  el.classList.add('container');\n  const shadow = el.attachShadow({\n    mode: 'open'\n  });\n  const input = document.createElement('input');\n  input.id = 'cd';\n  input.type = 'range';\n  input.max = \"200\";\n  input.min = \"5\";\n  input.step = \"1\"; // input.onchange = showVal(this.value)\n\n  const style = document.createElement('style');\n  style.textContent = get_theme();\n  shadow.append(style, input);\n  return el;\n}\n\nfunction get_theme() {\n  return `\n    :host(.container) {\n    }\n    input {\n      width: 20%;\n      transform: rotate(270deg);\n      margin-left: -100px;\n    }\n  `;\n}\n\nlet deck = {\n  0: 'https://www.trustedtarot.com/img/cards/the-fool.png',\n  1: 'https://www.trustedtarot.com/img/cards/the-magician.png',\n  2: 'https://www.trustedtarot.com/img/cards/the-high-priestess.png',\n  3: 'https://www.trustedtarot.com/img/cards/the-empress.png',\n  4: 'https://www.trustedtarot.com/img/cards/the-emperor.png',\n  5: 'https://www.trustedtarot.com/img/cards/the-heirophant.png',\n  6: 'https://www.trustedtarot.com/img/cards/the-lovers.png',\n  7: 'https://www.trustedtarot.com/img/cards/the-chariot.png',\n  8: 'https://www.trustedtarot.com/img/cards/strength.png',\n  9: 'https://www.trustedtarot.com/img/cards/the-hermit.png',\n  10: 'https://www.trustedtarot.com/img/cards/wheel-of-fortune.png',\n  11: 'https://www.trustedtarot.com/img/cards/justice.png',\n  12: 'https://www.trustedtarot.com/img/cards/the-hanged-man.png'\n}; // import {\n//   registerHelloWorld,\n//   sayHello,\n//   getRelayTime,\n//   tellFortune,\n// } from \"./_aqua/hello-world\"; // (2)\n\nlet count = 0;\n\nfunction Oracle() {\n  _s();\n\n  const [isConnected, setIsConnected] = useState(false);\n  const [helloMessage, setHelloMessage] = useState(null);\n  const [peerIdInput, setPeerIdInput] = useState('');\n  const [relayPeerIdInput, setRelayPeerIdInput] = useState('');\n\n  const connect = async relayPeerId => {\n    try {\n      await Fluence.start({\n        connectTo: relayPeerId\n      });\n      setIsConnected(true); // Register handler for this call in aqua:\n      // HelloPeer.hello(%init_peer_id%)\n\n      registerHelloWorld({\n        hello: str => {\n          console.log(str);\n        },\n        getFortune: async () => {\n          await new Promise(resolve => {\n            setTimeout(resolve, 1000);\n          });\n          return \"Wealth awaits you very soon.\";\n        }\n      }); // registerHelloPeer({\n      //     hello: (from) => {\n      //         setHelloMessage('Hello from: \\n' + from);\n      //         return 'Hello back to you, \\n' + from;\n      //     },\n      // });\n    } catch (err) {\n      console.log('Peer initialization failed', err);\n    }\n  };\n\n  const helloBtnOnClick = async () => {\n    if (!Fluence.getStatus().isConnected) {\n      return;\n    } // console.log(await sayHello()); // (4)\n    // console.log(await tellFortune()); // (6)\n\n\n    const relayTime = await getRelayTime(); // console.log(`The relay time is: ${relayTime}`);\n\n    console.log(Math.floor([...Array(relayTime % 78).keys()].reduce((x, y) => x + Math.abs(Math.tan(y))) % 78)); // Using aqua is as easy as calling a javascript funсtion\n    // const res = await sayHello(peerIdInput, relayPeerIdInput);\n    // setHelloMessage(res);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [isConnected ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Connected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"bold\",\n                children: \"Peer id:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"mono\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  id: \"peerId\",\n                  children: Fluence.getStatus().peerId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn-clipboard\",\n                  onClick: () => copyToClipboard(Fluence.getStatus().peerId),\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"gg-clipboard\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"bold\",\n                children: \"Relay peer id:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"mono\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  id: \"relayId\",\n                  children: Fluence.getStatus().relayPeerId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn-clipboard\",\n                  onClick: () => copyToClipboard(Fluence.getStatus().relayPeerId),\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"gg-clipboard\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Say hello!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"p\",\n            children: \"Now try opening a new tab with the same application. Copy paste the peer id and relay from the second tab and say hello!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label bold\",\n              children: \"Target peer id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"targetPeerId\",\n              className: \"input\",\n              type: \"text\",\n              onChange: e => setPeerIdInput(e.target.value),\n              value: peerIdInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label bold\",\n              children: \"Target relay\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"targetRelayId\",\n              className: \"input\",\n              type: \"text\",\n              onChange: e => setRelayPeerIdInput(e.target.value),\n              value: relayPeerIdInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-hello\",\n              onClick: helloBtnOnClick,\n              children: \"say hello\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Intro 1: P2P browser-to-browser\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Pick a relay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: relayNodes.map(x => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mono\",\n              children: x.peerId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: () => connect(x.multiaddr),\n              children: \"Connect\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 37\n            }, this)]\n          }, x.peerId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), helloMessage && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"message\",\n          children: [\" \", helloMessage, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Oracle, \"9H5GHTggrCjQBTDQx5bMhBLzRLA=\");\n\n_c = Oracle;\n\nfunction Spread() {\n  _s2();\n\n  // const [play] = useSound(cardFX);\n  const [card1, card1Set] = useState('');\n  const [card2, card2Set] = useState('');\n  const [card3, card3Set] = useState(''); // const [peerIdInput, setPeerIdInput] = useState('');\n  // const [relayPeerIdInput, setRelayPeerIdInput] = useState('');\n  // const connect = async (relayPeerId) => {\n  //     try {\n  //         await Fluence.start({ connectTo: relayPeerId });\n  //         setIsConnected(true);\n  //         // Register handler for this call in aqua:\n  //         // HelloPeer.hello(%init_peer_id%)\n  //         registerHelloWorld({\n  //             hello: (str) => {\n  //               console.log(str);\n  //             },\n  //             getFortune: async () => {\n  //               await new Promise((resolve) => {\n  //                 setTimeout(resolve, 1000);\n  //               });\n  //               return \"Wealth awaits you very soon.\";\n  //             },\n  //           });\n  //         // registerHelloPeer({\n  //         //     hello: (from) => {\n  //         //         setHelloMessage('Hello from: \\n' + from);\n  //         //         return 'Hello back to you, \\n' + from;\n  //         //     },\n  //         // });\n  //     } catch (err) {\n  //         console.log('Peer initialization failed', err);\n  //     }\n  // };\n  //   const helloBtnOnClick = async () => {\n  //       if (!Fluence.getStatus().isConnected) {\n  //           return;\n  //       }\n  //       // console.log(await sayHello()); // (4)\n  //       // console.log(await tellFortune()); // (6)\n  //       const relayTime = await getRelayTime();\n  //       // console.log(`The relay time is: ${relayTime}`);\n  //       console.log(Math.floor([...Array(relayTime % 78).keys()].reduce((x,y) => x + Math.abs(Math.tan(y)))%78))\n  //       // Using aqua is as easy as calling a javascript funсtion\n  //       // const res = await sayHello(peerIdInput, relayPeerIdInput);\n  //       // setHelloMessage(res);\n  //   };\n\n  const [init, setInit] = useState(false);\n  useEffect(() => {\n    var _document, _document$getElements, _document$getElements2;\n\n    // if(!init){\n    const range = rangeSlider();\n    document.body.append(range);\n    setInit(true); // try {\n    // (document.getElementsByClassName('container')[1] as HTMLElement).remove()\n    // (document.getElementsByClassName('container') as HTMLCollectionOf<HTMLElement>)[0].style.paddingLeft = '589px'\n    // (document.getElementsByClassName('container')[0] as HTMLElement).shadowRoot.getElementById('cd').style.marginTop = '-200px'\n    // const el = \n    // (document.getElementsByClassName('container')[0] as HTMLElement)).shadowRoot.getElementById('cd')\n    // if(el){\n    // }\n\n    var cd = (_document = document) === null || _document === void 0 ? void 0 : (_document$getElements = _document.getElementsByClassName('container')[0]) === null || _document$getElements === void 0 ? void 0 : (_document$getElements2 = _document$getElements.shadowRoot) === null || _document$getElements2 === void 0 ? void 0 : _document$getElements2.getElementById('cd');\n\n    cd.onchange = function (el) {\n      // your logic\n      console.log(el);\n      console.log(el.target.value);\n\n      if (el.target.value) {\n        // \n        const getRandom = Math.floor(Math.random() * 12); // const random = Arry(Math.tan()\n\n        if (count == 0) card1Set(String(getRandom));else if (count == 1) card2Set(String(getRandom));else if (count == 2) card3Set(String(getRandom));\n        count++;\n      }\n    }; // setTimeout(() => {\n    //   document.getElementsByClassName('container')?[0].shadowRoot.getElementById('cd').value = '5'\n    // },1000)\n    // play()\n    // } catch(e){\n    // console.log('something else')\n    // }\n    // }\n\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"c\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          width: \"30%\",\n          src: card1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 28\n        }, this), card1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"c\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          width: \"30%\",\n          src: card2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 28\n        }, this), card2]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"c\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          width: \"30%\",\n          src: card3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 28\n        }, this), card3]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        left: '1px'\n      },\n      children: \"Spread\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://gateway.pinata.cloud/ipfs/QmSoKLY9n55Hps7NhGMtQMk5V9PUwcmndfmY1uLRJzT8Yn\",\n      className: \"imganim\",\n      style: {\n        position: 'absolute',\n        height: '114px',\n        left: '600px',\n        top: '482px',\n        zIndex: '0'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(Spread, \"PUEkPlr0g+xkADSzZ1mkl9Kt09A=\");\n\n_c2 = Spread;\n\nfunction App() {\n  _s3();\n\n  const [coin, setCoin] = useState(null);\n  const [spread, setSpread] = useState(false);\n\n  const insertCoin = () => {\n    console.log('clicked');\n    setCoin( /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"coin-slot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"coin-slot-mask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"coin-bounce\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"coin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true));\n    setTimeout(() => {\n      setCoin(null);\n      setSpread(true);\n    }, 2000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Oracle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 5\n    }, this), !spread ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper crt\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          left: '29px'\n        },\n        children: \"Pull a Tarot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this), coin, /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://i.ibb.co/RHBTvXL/Screen-Shot-2022-08-17-at-12-00-18-PM.png\",\n        style: {\n          position: 'absolute',\n          height: '114px',\n          left: '436px',\n          top: '422px',\n          zIndex: '4'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => insertCoin(),\n        src: \"https://i.ibb.co/5LVD6RY/Screen-Shot-2022-08-17-at-9-55-37-AM.png\",\n        style: {\n          position: 'absolute',\n          height: '100px',\n          top: '430px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(Spread, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 372,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(App, \"P2bZywo50ExsTXJXmvSR072ww1A=\");\n\n_c3 = App;\n\nconst copyToClipboard = text => {\n  navigator.clipboard.writeText(text);\n};\n\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Oracle\");\n$RefreshReg$(_c2, \"Spread\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useEffect","useState","logo","Fluence","krasnodar","registerHelloWorld","getRelayTime","relayNodes","rangeSlider","el","document","createElement","classList","add","shadow","attachShadow","mode","input","id","type","max","min","step","style","textContent","get_theme","append","deck","count","Oracle","isConnected","setIsConnected","helloMessage","setHelloMessage","peerIdInput","setPeerIdInput","relayPeerIdInput","setRelayPeerIdInput","connect","relayPeerId","start","connectTo","hello","str","console","log","getFortune","Promise","resolve","setTimeout","err","helloBtnOnClick","getStatus","relayTime","Math","floor","Array","keys","reduce","x","y","abs","tan","peerId","copyToClipboard","e","target","value","map","multiaddr","Spread","card1","card1Set","card2","card2Set","card3","card3Set","init","setInit","range","body","cd","getElementsByClassName","shadowRoot","getElementById","onchange","getRandom","random","String","left","position","height","top","zIndex","App","coin","setCoin","spread","setSpread","insertCoin","text","navigator","clipboard","writeText"],"sources":["/Users/mgrok/Projects/fluence-projects/examples/quickstart/1-browser-to-browser/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport logo from './logo.svg';\nimport './App.scss';\n\nimport { Fluence } from '@fluencelabs/fluence';\nimport { krasnodar } from '@fluencelabs/fluence-network-environment';\nimport { registerHelloWorld,\n  sayHello,\n  getRelayTime,\n  tellFortune, } from './_aqua/getting-started';\n\nconst relayNodes = [krasnodar[4], krasnodar[5], krasnodar[6]];\n\nfunction rangeSlider () {\n  const el = document.createElement('div')\n  el.classList.add('container')\n  const shadow = el.attachShadow({ mode: 'open'})\n\n  const input = document.createElement('input')\n  input.id = 'cd'\n  input.type = 'range'\n  input.max=\"200\"\n  input.min=\"5\"\n  input.step=\"1\"\n  // input.onchange = showVal(this.value)\n\n  const style = document.createElement('style')\n  style.textContent = get_theme() \n\n  shadow.append(style, input)\n  return el\n}\n\nfunction get_theme () {\n  return `\n    :host(.container) {\n    }\n    input {\n      width: 20%;\n      transform: rotate(270deg);\n      margin-left: -100px;\n    }\n  `\n}\nlet deck = {\n  0: 'https://www.trustedtarot.com/img/cards/the-fool.png',\n  1: 'https://www.trustedtarot.com/img/cards/the-magician.png',\n  2: 'https://www.trustedtarot.com/img/cards/the-high-priestess.png',\n  3: 'https://www.trustedtarot.com/img/cards/the-empress.png',\n  4: 'https://www.trustedtarot.com/img/cards/the-emperor.png',\n  5:'https://www.trustedtarot.com/img/cards/the-heirophant.png',\n  6:'https://www.trustedtarot.com/img/cards/the-lovers.png',\n  7:'https://www.trustedtarot.com/img/cards/the-chariot.png',\n  8:'https://www.trustedtarot.com/img/cards/strength.png',\n  9:'https://www.trustedtarot.com/img/cards/the-hermit.png',\n  10:'https://www.trustedtarot.com/img/cards/wheel-of-fortune.png',\n  11:'https://www.trustedtarot.com/img/cards/justice.png',\n  12:'https://www.trustedtarot.com/img/cards/the-hanged-man.png'\n}\n\n// import {\n//   registerHelloWorld,\n//   sayHello,\n//   getRelayTime,\n//   tellFortune,\n// } from \"./_aqua/hello-world\"; // (2)\nlet count = 0;\n\nfunction Oracle() {\n    const [isConnected, setIsConnected] = useState<boolean>(false);\n    const [helloMessage, setHelloMessage] = useState<string | null>(null);\n\n    const [peerIdInput, setPeerIdInput] = useState<string>('');\n    const [relayPeerIdInput, setRelayPeerIdInput] = useState<string>('');\n\n    const connect = async (relayPeerId: string) => {\n        try {\n            await Fluence.start({ connectTo: relayPeerId });\n            setIsConnected(true);\n            // Register handler for this call in aqua:\n            // HelloPeer.hello(%init_peer_id%)\n\n            registerHelloWorld({\n                hello: (str: any) => {\n                  console.log(str);\n                },\n                getFortune: async () => {\n                  await new Promise((resolve) => {\n                    setTimeout(resolve, 1000);\n                  });\n                  return \"Wealth awaits you very soon.\";\n                },\n              });\n\n            // registerHelloPeer({\n            //     hello: (from) => {\n            //         setHelloMessage('Hello from: \\n' + from);\n            //         return 'Hello back to you, \\n' + from;\n            //     },\n            // });\n        } catch (err) {\n            console.log('Peer initialization failed', err);\n        }\n    };\n\n    const helloBtnOnClick = async () => {\n        if (!Fluence.getStatus().isConnected) {\n            return;\n        }\n\n        // console.log(await sayHello()); // (4)\n\n        // console.log(await tellFortune()); // (6)\n\n        const relayTime = await getRelayTime();\n\n        // console.log(`The relay time is: ${relayTime}`);\n        console.log(Math.floor([...Array(relayTime % 78).keys()].reduce((x,y) => x + Math.abs(Math.tan(y)))%78))\n\n        // Using aqua is as easy as calling a javascript funсtion\n        // const res = await sayHello(peerIdInput, relayPeerIdInput);\n        // setHelloMessage(res);\n    };\n\n    return (\n        <div className=\"App\">\n            <header>\n                <img src={logo} className=\"logo\" alt=\"logo\" />\n            </header>\n\n            <div className=\"content\">\n                {isConnected ? (\n                    <>\n                        <h1>Connected</h1>\n                        <table>\n                            <tbody>\n                                <tr>\n                                    <td className=\"bold\">Peer id:</td>\n                                    <td className=\"mono\">\n                                        <span id=\"peerId\">{Fluence.getStatus().peerId!}</span>\n                                    </td>\n                                    <td>\n                                        <button\n                                            className=\"btn-clipboard\"\n                                            onClick={() => copyToClipboard(Fluence.getStatus().peerId!)}\n                                        >\n                                            <i className=\"gg-clipboard\"></i>\n                                        </button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className=\"bold\">Relay peer id:</td>\n                                    <td className=\"mono\">\n                                        <span id=\"relayId\">{Fluence.getStatus().relayPeerId}</span>\n                                    </td>\n                                    <td>\n                                        <button\n                                            className=\"btn-clipboard\"\n                                            onClick={() => copyToClipboard(Fluence.getStatus().relayPeerId!)}\n                                        >\n                                            <i className=\"gg-clipboard\"></i>\n                                        </button>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n\n                        <div>\n                            <h2>Say hello!</h2>\n                            <p className=\"p\">\n                                Now try opening a new tab with the same application. Copy paste the peer id and relay\n                                from the second tab and say hello!\n                            </p>\n                            <div className=\"row\">\n                                <label className=\"label bold\">Target peer id</label>\n                                <input\n                                    id=\"targetPeerId\"\n                                    className=\"input\"\n                                    type=\"text\"\n                                    onChange={(e) => setPeerIdInput(e.target.value)}\n                                    value={peerIdInput}\n                                />\n                            </div>\n                            <div className=\"row\">\n                                <label className=\"label bold\">Target relay</label>\n                                <input\n                                    id=\"targetRelayId\"\n                                    className=\"input\"\n                                    type=\"text\"\n                                    onChange={(e) => setRelayPeerIdInput(e.target.value)}\n                                    value={relayPeerIdInput}\n                                />\n                            </div>\n                            <div className=\"row\">\n                                <button className=\"btn btn-hello\" onClick={helloBtnOnClick}>\n                                    say hello\n                                </button>\n                            </div>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <h1>Intro 1: P2P browser-to-browser</h1>\n                        <h2>Pick a relay</h2>\n                        <ul>\n                            {relayNodes.map((x) => (\n                                <li key={x.peerId}>\n                                    <span className=\"mono\">{x.peerId}</span>\n                                    <button className=\"btn\" onClick={() => connect(x.multiaddr)}>\n                                        Connect\n                                    </button>\n                                </li>\n                            ))}\n                        </ul>\n                    </>\n                )}\n\n                {helloMessage && (\n                    <>\n                        <h2>Message</h2>\n                        <div id=\"message\"> {helloMessage} </div>\n                    </>\n                )}\n            </div>\n        </div>\n    );\n}\n\nfunction Spread() {\n  // const [play] = useSound(cardFX);\n  const [card1, card1Set]= useState<string>('');\n  const [card2, card2Set]= useState<string>('');\n  const [card3, card3Set]= useState<string>('');\n\n  // const [peerIdInput, setPeerIdInput] = useState('');\n  // const [relayPeerIdInput, setRelayPeerIdInput] = useState('');\n\n  // const connect = async (relayPeerId) => {\n  //     try {\n  //         await Fluence.start({ connectTo: relayPeerId });\n  //         setIsConnected(true);\n  //         // Register handler for this call in aqua:\n  //         // HelloPeer.hello(%init_peer_id%)\n\n  //         registerHelloWorld({\n  //             hello: (str) => {\n  //               console.log(str);\n  //             },\n  //             getFortune: async () => {\n  //               await new Promise((resolve) => {\n  //                 setTimeout(resolve, 1000);\n  //               });\n  //               return \"Wealth awaits you very soon.\";\n  //             },\n  //           });\n\n  //         // registerHelloPeer({\n  //         //     hello: (from) => {\n  //         //         setHelloMessage('Hello from: \\n' + from);\n  //         //         return 'Hello back to you, \\n' + from;\n  //         //     },\n  //         // });\n  //     } catch (err) {\n  //         console.log('Peer initialization failed', err);\n  //     }\n  // };\n\n  //   const helloBtnOnClick = async () => {\n  //       if (!Fluence.getStatus().isConnected) {\n  //           return;\n  //       }\n\n  //       // console.log(await sayHello()); // (4)\n\n  //       // console.log(await tellFortune()); // (6)\n\n  //       const relayTime = await getRelayTime();\n\n  //       // console.log(`The relay time is: ${relayTime}`);\n  //       console.log(Math.floor([...Array(relayTime % 78).keys()].reduce((x,y) => x + Math.abs(Math.tan(y)))%78))\n\n  //       // Using aqua is as easy as calling a javascript funсtion\n  //       // const res = await sayHello(peerIdInput, relayPeerIdInput);\n  //       // setHelloMessage(res);\n  //   };\n\n  const [init, setInit] = useState(false)\n  useEffect(() => {\n\n    // if(!init){\n      const range = rangeSlider()\n      document.body.append(range)\n      setInit(true);\n      \n\n      // try {\n        // (document.getElementsByClassName('container')[1] as HTMLElement).remove()\n        // (document.getElementsByClassName('container') as HTMLCollectionOf<HTMLElement>)[0].style.paddingLeft = '589px'\n        // (document.getElementsByClassName('container')[0] as HTMLElement).shadowRoot.getElementById('cd').style.marginTop = '-200px'\n\n        // const el = \n        // (document.getElementsByClassName('container')[0] as HTMLElement)).shadowRoot.getElementById('cd')\n          // if(el){\n\n          // }\n\n            var cd: any = (document?.getElementsByClassName('container')[0] as HTMLElement | null)?.shadowRoot?.getElementById('cd');\n\n            cd.onchange = function(el: any) {\n              // your logic\n              console.log(el)\n              console.log(el.target.value)\n              if(el.target.value){\n\n                // \n\n                const getRandom = Math.floor(Math.random() * 12)\n                // const random = Arry(Math.tan()\n                if(count == 0) card1Set(String(getRandom))\n                else if(count == 1) card2Set(String(getRandom))\n                else if(count == 2) card3Set(String(getRandom))\n                count++;\n\n\n              }\n            }\n\n          // setTimeout(() => {\n          //   document.getElementsByClassName('container')?[0].shadowRoot.getElementById('cd').value = '5'\n          // },1000)\n          // play()\n      // } catch(e){\n        // console.log('something else')\n      // }\n    // }\n  })\n\n  return(<>\n      <div className=\"wrapper\">\n        <div className=\"c\"><img width=\"30%\" src={card1}/>{card1}</div>\n        <div className=\"c\"><img width=\"30%\" src={card2} />{card2}</div>\n        <div className=\"c\"><img width=\"30%\" src={card3}/>{card3}</div>\n      </div>\n      <h1 style={{left: '1px'}}>Spread</h1>\n        <img src=\"https://gateway.pinata.cloud/ipfs/QmSoKLY9n55Hps7NhGMtQMk5V9PUwcmndfmY1uLRJzT8Yn\" className=\"imganim\"style={{position: 'absolute', height: '114px', left: '600px', top: '482px', zIndex: '0'}}/>\n\n    </>)\n}\n\nfunction App() {\n  const [coin, setCoin] = useState<any>(null)\n  const [spread, setSpread] = useState(false)\n  const insertCoin = () => {\n    console.log('clicked')\n    setCoin(\n      <>\n      <div className=\"coin-slot\"></div>\n      <div className=\"coin-slot-mask\"></div>\n      <div className=\"coin-bounce\">\n      <div className=\"coin\"></div>\n      </div>\n      </>\n      )\n\n    setTimeout(() => {\n      setCoin(null)\n      setSpread(true)\n    }, 2000)\n  }\n\n  return (\n    <div className=\"App\">\n    <Oracle/>\n    {\n      ! spread ? \n      <div className=\"wrapper crt\">\n        <h1 style={{left: '29px'}}>Pull a Tarot</h1>\n          {coin}\n        <img src=\"https://i.ibb.co/RHBTvXL/Screen-Shot-2022-08-17-at-12-00-18-PM.png\" style={{position: 'absolute', height: '114px', left: '436px', top: '422px', zIndex: '4'}}/>\n        <img onClick={() => insertCoin()} src=\"https://i.ibb.co/5LVD6RY/Screen-Shot-2022-08-17-at-9-55-37-AM.png\" style={{position: 'absolute', height: '100px', top: '430px'}}/>\n        {/*<button style={{marginTop: '300px'}} onClick={() => insertCoin()}>coin</button>*/}\n      </div>\n      : \n        <Spread/>\n\n    }\n    </div>\n  );\n}\n\nconst copyToClipboard = (text: string) => {\n    navigator.clipboard.writeText(text);\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}