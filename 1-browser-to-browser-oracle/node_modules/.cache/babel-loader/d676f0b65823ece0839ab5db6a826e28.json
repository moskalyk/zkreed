{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.loadDefaults = exports.loadWasmFromFileSystem = exports.loadWasmFromNpmPackage = exports.loadWasmFromServer = void 0;\n\nvar browser_or_node_1 = require(\"browser-or-node\");\n\nvar _1 = require(\".\");\n\nvar buffer_1 = require(\"buffer\");\n\nvar bufferToSharedArrayBuffer = function (buffer) {\n  var sab = new SharedArrayBuffer(buffer.length);\n  var tmp = new Uint8Array(sab);\n  tmp.set(buffer, 0);\n  return sab;\n};\n/**\n * Load wasm file from the server. Only works in browsers.\n * The function will try load file into SharedArrayBuffer if the site is cross-origin isolated.\n * Otherwise the return value fallbacks to Buffer which is less performant but is still compatible with FluenceAppService methods.\n * We strongly recommend to set-up cross-origin headers. For more details see: See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer#security_requirements\n * Filename is relative to current origin.\n * @param filePath - path to the wasm file relative to current origin\n * @returns Either SharedArrayBuffer or Buffer with the wasm file\n */\n\n\nvar loadWasmFromServer = function (filePath) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var fullUrl, res, ab, buffer;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (!browser_or_node_1.isBrowser) {\n            throw new Error('Files can be loaded from url only in browser environment');\n          }\n\n          fullUrl = window.location.origin + '/' + filePath;\n          return [4\n          /*yield*/\n          , fetch(fullUrl)];\n\n        case 1:\n          res = _a.sent();\n          return [4\n          /*yield*/\n          , res.arrayBuffer()];\n\n        case 2:\n          ab = _a.sent();\n          new Uint8Array(ab);\n          buffer = buffer_1.Buffer.from(ab); // only convert to shared buffers if necessary CORS headers have been set:\n          // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer#security_requirements\n\n          if (eval('crossOriginIsolated')) {\n            return [2\n            /*return*/\n            , bufferToSharedArrayBuffer(buffer)];\n          }\n\n          return [2\n          /*return*/\n          , buffer];\n      }\n    });\n  });\n};\n\nexports.loadWasmFromServer = loadWasmFromServer;\n/**\n * Load wasm file from npm package. Only works in nodejs environment.\n * The function returns SharedArrayBuffer compatible with FluenceAppService methods.\n * @param source - object specifying the source of the file. Consist two fields: package name and file path.\n * @returns SharedArrayBuffer with the wasm file\n */\n\nvar loadWasmFromNpmPackage = function (source) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var r, path, fs, packagePath, filePath, buffer;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (!browser_or_node_1.isNode) {\n            throw new Error('Files can be loaded from npm packages only in nodejs environment');\n          }\n\n          r = eval('require');\n          path = r('path');\n          fs = r('fs').promises;\n          packagePath = r.resolve(source.package);\n          filePath = path.join(path.dirname(packagePath), source.file);\n          return [4\n          /*yield*/\n          , fs.readFile(filePath)];\n\n        case 1:\n          buffer = _a.sent();\n          return [2\n          /*return*/\n          , bufferToSharedArrayBuffer(buffer)];\n      }\n    });\n  });\n};\n\nexports.loadWasmFromNpmPackage = loadWasmFromNpmPackage;\n/**\n * Load wasm file from the file system. Only works in nodejs environment.\n * The functions returns SharedArrayBuffer compatible with FluenceAppService methods.\n * @param filePath - path to the wasm file\n * @returns SharedArrayBuffer with the wasm file\n */\n\nvar loadWasmFromFileSystem = function (filePath) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var r, fs, buffer;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (!browser_or_node_1.isNode) {\n            throw new Error('Files can be loaded from file system only in nodejs environment');\n          }\n\n          r = eval('require');\n          fs = r('fs').promises;\n          return [4\n          /*yield*/\n          , fs.readFile(filePath)];\n\n        case 1:\n          buffer = _a.sent();\n          return [2\n          /*return*/\n          , bufferToSharedArrayBuffer(buffer)];\n      }\n    });\n  });\n};\n\nexports.loadWasmFromFileSystem = loadWasmFromFileSystem;\n/**\n * Load wasm marine control module and avm module required for marine-js to work from the default source.\n * Both modules are loaded in the format compatible with FluenceAppService methods.\n * If called from the nodejs environment files are loaded from corresponding npm packages.\n * If called inside browser files are loaded from the server.\n * @returns Object with two fields: \"marine\" and \"avm\" corresponding to control module and avm module\n */\n\nvar loadDefaults = function () {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var promises, _a, marine, avm;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          // check if we are running inside the browser and instantiate worker with the corresponding script\n          if (browser_or_node_1.isBrowser) {\n            promises = [// force new line\n            (0, exports.loadWasmFromServer)(_1.defaultNames.marine.file), (0, exports.loadWasmFromServer)(_1.defaultNames.avm.file)];\n          } else if (browser_or_node_1.isNode) {\n            promises = [// force new line\n            (0, exports.loadWasmFromNpmPackage)(_1.defaultNames.marine), (0, exports.loadWasmFromNpmPackage)(_1.defaultNames.avm)];\n          } else {\n            throw new Error('Unknown environment');\n          }\n\n          return [4\n          /*yield*/\n          , Promise.all(promises)];\n\n        case 1:\n          _a = _b.sent(), marine = _a[0], avm = _a[1];\n          return [2\n          /*return*/\n          , {\n            marine: marine,\n            avm: avm\n          }];\n      }\n    });\n  });\n};\n\nexports.loadDefaults = loadDefaults;","map":{"version":3,"mappings":"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","names":["bufferToSharedArrayBuffer","buffer","sab","SharedArrayBuffer","length","tmp","Uint8Array","set","loadWasmFromServer","filePath","browser_or_node_1","Error","fullUrl","window","location","origin","fetch","res","_a","arrayBuffer","ab","buffer_1","from","eval","exports","loadWasmFromNpmPackage","source","r","path","fs","promises","packagePath","resolve","package","join","dirname","file","readFile","loadWasmFromFileSystem","loadDefaults","_1","marine","avm","Promise","all","_b"],"sources":["../src/loadWasmHelpers.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}