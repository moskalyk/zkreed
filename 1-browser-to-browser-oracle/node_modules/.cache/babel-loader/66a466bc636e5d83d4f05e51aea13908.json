{"ast":null,"code":"\"use strict\";\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n\n  return to;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.intervalProvider = void 0;\nexports.intervalProvider = {\n  setInterval: function (handler, timeout) {\n    var args = [];\n\n    for (var _i = 2; _i < arguments.length; _i++) {\n      args[_i - 2] = arguments[_i];\n    }\n\n    var delegate = exports.intervalProvider.delegate;\n\n    if (delegate === null || delegate === void 0 ? void 0 : delegate.setInterval) {\n      return delegate.setInterval.apply(delegate, __spreadArray([handler, timeout], __read(args)));\n    }\n\n    return setInterval.apply(void 0, __spreadArray([handler, timeout], __read(args)));\n  },\n  clearInterval: function (handle) {\n    var delegate = exports.intervalProvider.delegate;\n    return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearInterval) || clearInterval)(handle);\n  },\n  delegate: undefined\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeaA,2BAAqC;EAGhDC,WAAW,EAAX,UAAYC,OAAZ,EAAiCC,OAAjC,EAAiD;IAAE;;SAAA,yCAAO;MAAPC;;;IACzC,YAAQ,GAAKJ,yBAAgBK,QAA7B;;IACR,IAAIA,QAAQ,SAAR,YAAQ,WAAR,GAAQ,MAAR,WAAQ,CAAEJ,WAAd,EAA2B;MACzB,OAAOI,QAAQ,CAACJ,WAAT,CAAoBK,KAApB,WAAQC,eAAaL,OAAb,EAAsBC,OAAtB,GAA6BK,OAAKJ,IAAL,CAA7B,CAAR,CAAP;IACD;;IACD,OAAOH,WAAW,MAAX,CAAW,MAAX,EAAWM,eAACL,OAAD,EAAUC,OAAV,GAAiBK,OAAKJ,IAAL,CAAjB,CAAX,CAAP;EACD,CAT+C;EAUhDK,aAAa,EAAb,UAAcC,MAAd,EAAoB;IACV,YAAQ,GAAKV,yBAAgBK,QAA7B;IACR,OAAO,CAAC,SAAQ,SAAR,YAAQ,WAAR,GAAQ,MAAR,WAAQ,CAAEI,aAAV,KAA2BA,aAA5B,EAA2CC,MAA3C,CAAP;EACD,CAb+C;EAchDL,QAAQ,EAAEM;AAdsC,CAArC","names":["exports","setInterval","handler","timeout","args","delegate","apply","__spreadArray","__read","clearInterval","handle","undefined"],"sources":["/Users/mgrok/Projects/fluence-projects/examples/quickstart/1-browser-to-browser/node_modules/rxjs/src/internal/scheduler/intervalProvider.ts"],"sourcesContent":["import type { TimerHandle } from './timerHandle';\ntype SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearIntervalFunction = (handle: TimerHandle) => void;\n\ninterface IntervalProvider {\n  setInterval: SetIntervalFunction;\n  clearInterval: ClearIntervalFunction;\n  delegate:\n    | {\n        setInterval: SetIntervalFunction;\n        clearInterval: ClearIntervalFunction;\n      }\n    | undefined;\n}\n\nexport const intervalProvider: IntervalProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setInterval(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = intervalProvider;\n    if (delegate?.setInterval) {\n      return delegate.setInterval(handler, timeout, ...args);\n    }\n    return setInterval(handler, timeout, ...args);\n  },\n  clearInterval(handle) {\n    const { delegate } = intervalProvider;\n    return (delegate?.clearInterval || clearInterval)(handle as any);\n  },\n  delegate: undefined,\n};\n"]},"metadata":{},"sourceType":"script"}