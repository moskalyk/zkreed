{"ast":null,"code":"\"use strict\"; // tslint:disable max-classes-per-file\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isWorkerRuntime = exports.getWorkerImplementation = exports.defaultPoolSize = void 0;\n\nconst get_bundle_url_browser_1 = require(\"./get-bundle-url.browser\");\n\nexports.defaultPoolSize = typeof navigator !== \"undefined\" && navigator.hardwareConcurrency ? navigator.hardwareConcurrency : 4;\n\nconst isAbsoluteURL = value => /^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.test(value);\n\nfunction createSourceBlobURL(code) {\n  const blob = new Blob([code], {\n    type: \"application/javascript\"\n  });\n  return URL.createObjectURL(blob);\n}\n\nfunction selectWorkerImplementation() {\n  if (typeof Worker === \"undefined\") {\n    // Might happen on Safari, for instance\n    // The idea is to only fail if the constructor is actually used\n    return class NoWebWorker {\n      constructor() {\n        throw Error(\"No web worker implementation available. You might have tried to spawn a worker within a worker in a browser that doesn't support workers in workers.\");\n      }\n\n    };\n  }\n\n  class WebWorker extends Worker {\n    constructor(url, options) {\n      var _a, _b;\n\n      if (typeof url === \"string\" && options && options._baseURL) {\n        url = new URL(url, options._baseURL);\n      } else if (typeof url === \"string\" && !isAbsoluteURL(url) && get_bundle_url_browser_1.getBundleURL().match(/^file:\\/\\//i)) {\n        url = new URL(url, get_bundle_url_browser_1.getBundleURL().replace(/\\/[^\\/]+$/, \"/\"));\n\n        if ((_a = options === null || options === void 0 ? void 0 : options.CORSWorkaround) !== null && _a !== void 0 ? _a : true) {\n          url = createSourceBlobURL(`importScripts(${JSON.stringify(url)});`);\n        }\n      }\n\n      if (typeof url === \"string\" && isAbsoluteURL(url)) {\n        // Create source code blob loading JS file via `importScripts()`\n        // to circumvent worker CORS restrictions\n        if ((_b = options === null || options === void 0 ? void 0 : options.CORSWorkaround) !== null && _b !== void 0 ? _b : true) {\n          url = createSourceBlobURL(`importScripts(${JSON.stringify(url)});`);\n        }\n      }\n\n      super(url, options);\n    }\n\n  }\n\n  class BlobWorker extends WebWorker {\n    constructor(blob, options) {\n      const url = window.URL.createObjectURL(blob);\n      super(url, options);\n    }\n\n    static fromText(source, options) {\n      const blob = new window.Blob([source], {\n        type: \"text/javascript\"\n      });\n      return new BlobWorker(blob, options);\n    }\n\n  }\n\n  return {\n    blob: BlobWorker,\n    default: WebWorker\n  };\n}\n\nlet implementation;\n\nfunction getWorkerImplementation() {\n  if (!implementation) {\n    implementation = selectWorkerImplementation();\n  }\n\n  return implementation;\n}\n\nexports.getWorkerImplementation = getWorkerImplementation;\n\nfunction isWorkerRuntime() {\n  const isWindowContext = typeof self !== \"undefined\" && typeof Window !== \"undefined\" && self instanceof Window;\n  return typeof self !== \"undefined\" && self.postMessage && !isWindowContext ? true : false;\n}\n\nexports.isWorkerRuntime = isWorkerRuntime;","map":{"version":3,"names":["Object","defineProperty","exports","value","isWorkerRuntime","getWorkerImplementation","defaultPoolSize","get_bundle_url_browser_1","require","navigator","hardwareConcurrency","isAbsoluteURL","test","createSourceBlobURL","code","blob","Blob","type","URL","createObjectURL","selectWorkerImplementation","Worker","NoWebWorker","constructor","Error","WebWorker","url","options","_a","_b","_baseURL","getBundleURL","match","replace","CORSWorkaround","JSON","stringify","BlobWorker","window","fromText","source","default","implementation","isWindowContext","self","Window","postMessage"],"sources":["/Users/mgrok/Projects/fluence-projects/examples/quickstart/1-browser-to-browser/node_modules/threads/dist/master/implementation.browser.js"],"sourcesContent":["\"use strict\";\n// tslint:disable max-classes-per-file\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isWorkerRuntime = exports.getWorkerImplementation = exports.defaultPoolSize = void 0;\nconst get_bundle_url_browser_1 = require(\"./get-bundle-url.browser\");\nexports.defaultPoolSize = typeof navigator !== \"undefined\" && navigator.hardwareConcurrency\n    ? navigator.hardwareConcurrency\n    : 4;\nconst isAbsoluteURL = (value) => /^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.test(value);\nfunction createSourceBlobURL(code) {\n    const blob = new Blob([code], { type: \"application/javascript\" });\n    return URL.createObjectURL(blob);\n}\nfunction selectWorkerImplementation() {\n    if (typeof Worker === \"undefined\") {\n        // Might happen on Safari, for instance\n        // The idea is to only fail if the constructor is actually used\n        return class NoWebWorker {\n            constructor() {\n                throw Error(\"No web worker implementation available. You might have tried to spawn a worker within a worker in a browser that doesn't support workers in workers.\");\n            }\n        };\n    }\n    class WebWorker extends Worker {\n        constructor(url, options) {\n            var _a, _b;\n            if (typeof url === \"string\" && options && options._baseURL) {\n                url = new URL(url, options._baseURL);\n            }\n            else if (typeof url === \"string\" && !isAbsoluteURL(url) && get_bundle_url_browser_1.getBundleURL().match(/^file:\\/\\//i)) {\n                url = new URL(url, get_bundle_url_browser_1.getBundleURL().replace(/\\/[^\\/]+$/, \"/\"));\n                if ((_a = options === null || options === void 0 ? void 0 : options.CORSWorkaround) !== null && _a !== void 0 ? _a : true) {\n                    url = createSourceBlobURL(`importScripts(${JSON.stringify(url)});`);\n                }\n            }\n            if (typeof url === \"string\" && isAbsoluteURL(url)) {\n                // Create source code blob loading JS file via `importScripts()`\n                // to circumvent worker CORS restrictions\n                if ((_b = options === null || options === void 0 ? void 0 : options.CORSWorkaround) !== null && _b !== void 0 ? _b : true) {\n                    url = createSourceBlobURL(`importScripts(${JSON.stringify(url)});`);\n                }\n            }\n            super(url, options);\n        }\n    }\n    class BlobWorker extends WebWorker {\n        constructor(blob, options) {\n            const url = window.URL.createObjectURL(blob);\n            super(url, options);\n        }\n        static fromText(source, options) {\n            const blob = new window.Blob([source], { type: \"text/javascript\" });\n            return new BlobWorker(blob, options);\n        }\n    }\n    return {\n        blob: BlobWorker,\n        default: WebWorker\n    };\n}\nlet implementation;\nfunction getWorkerImplementation() {\n    if (!implementation) {\n        implementation = selectWorkerImplementation();\n    }\n    return implementation;\n}\nexports.getWorkerImplementation = getWorkerImplementation;\nfunction isWorkerRuntime() {\n    const isWindowContext = typeof self !== \"undefined\" && typeof Window !== \"undefined\" && self instanceof Window;\n    return typeof self !== \"undefined\" && self.postMessage && !isWindowContext ? true : false;\n}\nexports.isWorkerRuntime = isWorkerRuntime;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}