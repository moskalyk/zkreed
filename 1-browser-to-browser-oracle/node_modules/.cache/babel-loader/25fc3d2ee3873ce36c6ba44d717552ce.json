{"ast":null,"code":"\"use strict\";\n/**\n * Symbols used internally within ts-pattern to construct and discriminate\n * Guard, Not, and Select, and AnonymousSelect patterns\n *\n * Symbols have the advantage of not appearing in auto-complete suggestions in\n * user defined patterns, and eliminate the admittedly unlikely risk of property\n * overlap between ts-pattern internals and user defined patterns.\n *\n * These symbols have to be visible to tsc for type inference to work, but\n * users should not import them\n * @module\n * @private\n * @internal\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnonymousSelect = exports.NamedSelect = exports.Not = exports.Guard = exports.PatternKind = void 0;\n/** @internal This symbol should only be used by ts-pattern's internals. */\n\nexports.PatternKind = Symbol('@ts-pattern/pattern-kind');\n/** @internal This symbol should only be used by ts-pattern's internals. */\n\nexports.Guard = Symbol('@ts-pattern/guard');\n/** @internal This symbol should only be used by ts-pattern's internals. */\n\nexports.Not = Symbol('@ts-pattern/not');\n/** @internal This symbol should only be used by ts-pattern's internals. */\n\nexports.NamedSelect = Symbol('@ts-pattern/named-select');\n/** @internal This symbol should only be used by ts-pattern's internals. */\n\nexports.AnonymousSelect = Symbol('@ts-pattern/anonymous-select');","map":{"version":3,"names":["Object","defineProperty","exports","value","AnonymousSelect","NamedSelect","Not","Guard","PatternKind","Symbol"],"sources":["/Users/mgrok/Projects/fluence-projects/examples/quickstart/1-browser-to-browser/node_modules/ts-pattern/lib/symbols.js"],"sourcesContent":["\"use strict\";\n/**\n * Symbols used internally within ts-pattern to construct and discriminate\n * Guard, Not, and Select, and AnonymousSelect patterns\n *\n * Symbols have the advantage of not appearing in auto-complete suggestions in\n * user defined patterns, and eliminate the admittedly unlikely risk of property\n * overlap between ts-pattern internals and user defined patterns.\n *\n * These symbols have to be visible to tsc for type inference to work, but\n * users should not import them\n * @module\n * @private\n * @internal\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AnonymousSelect = exports.NamedSelect = exports.Not = exports.Guard = exports.PatternKind = void 0;\n/** @internal This symbol should only be used by ts-pattern's internals. */\nexports.PatternKind = Symbol('@ts-pattern/pattern-kind');\n/** @internal This symbol should only be used by ts-pattern's internals. */\nexports.Guard = Symbol('@ts-pattern/guard');\n/** @internal This symbol should only be used by ts-pattern's internals. */\nexports.Not = Symbol('@ts-pattern/not');\n/** @internal This symbol should only be used by ts-pattern's internals. */\nexports.NamedSelect = Symbol('@ts-pattern/named-select');\n/** @internal This symbol should only be used by ts-pattern's internals. */\nexports.AnonymousSelect = Symbol('@ts-pattern/anonymous-select');\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,eAAR,GAA0BF,OAAO,CAACG,WAAR,GAAsBH,OAAO,CAACI,GAAR,GAAcJ,OAAO,CAACK,KAAR,GAAgBL,OAAO,CAACM,WAAR,GAAsB,KAAK,CAAzG;AACA;;AACAN,OAAO,CAACM,WAAR,GAAsBC,MAAM,CAAC,0BAAD,CAA5B;AACA;;AACAP,OAAO,CAACK,KAAR,GAAgBE,MAAM,CAAC,mBAAD,CAAtB;AACA;;AACAP,OAAO,CAACI,GAAR,GAAcG,MAAM,CAAC,iBAAD,CAApB;AACA;;AACAP,OAAO,CAACG,WAAR,GAAsBI,MAAM,CAAC,0BAAD,CAA5B;AACA;;AACAP,OAAO,CAACE,eAAR,GAA0BK,MAAM,CAAC,8BAAD,CAAhC"},"metadata":{},"sourceType":"script"}