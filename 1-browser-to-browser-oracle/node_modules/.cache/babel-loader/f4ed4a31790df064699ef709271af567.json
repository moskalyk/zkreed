{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fromSubscribable = void 0;\n\nvar Observable_1 = require(\"../Observable\");\n\nfunction fromSubscribable(subscribable) {\n  return new Observable_1.Observable(function (subscriber) {\n    return subscribable.subscribe(subscriber);\n  });\n}\n\nexports.fromSubscribable = fromSubscribable;","map":{"version":3,"mappings":";;;;;;;AAAA;;AAcA,SAAgBA,gBAAhB,CAAoCC,YAApC,EAAiE;EAC/D,OAAO,IAAIC,uBAAJ,CAAe,UAACC,UAAD,EAA0B;IAAK,mBAAY,CAACC,SAAb,CAAuBD,UAAvB;EAAkC,CAAhF,CAAP;AACD;;AAFDE","names":["fromSubscribable","subscribable","Observable_1","subscriber","subscribe","exports"],"sources":["/Users/mgrok/Projects/fluence-projects/examples/quickstart/1-browser-to-browser/node_modules/rxjs/src/internal/observable/fromSubscribable.ts"],"sourcesContent":["import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscribable } from '../types';\n\n/**\n * Used to convert a subscribable to an observable.\n *\n * Currently, this is only used within internals.\n *\n * TODO: Discuss ObservableInput supporting \"Subscribable\".\n * https://github.com/ReactiveX/rxjs/issues/5909\n *\n * @param subscribable A subscribable\n */\nexport function fromSubscribable<T>(subscribable: Subscribable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => subscribable.subscribe(subscriber));\n}\n"]},"metadata":{},"sourceType":"script"}