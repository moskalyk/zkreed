import { Particle } from './Particle';
import PeerId from 'peer-id';
import { Multiaddr } from 'multiaddr';
export declare const PROTOCOL_NAME = "/fluence/particle/2.0.0";
/**
 * Options to configure fluence connection
 */
export interface FluenceConnectionOptions {
    /**
     * Peer id of the Fluence Peer
     */
    peerId: PeerId;
    /**
     * Multiaddress of the relay to make connection to
     */
    relayAddress: Multiaddr;
    /**
     * The dialing timeout in milliseconds
     */
    dialTimeoutMs?: number;
    /**
     * Handler for incoming particles from the connection
     */
    onIncomingParticle: (p: Particle) => void;
}
export declare class FluenceConnection {
    constructor();
    static createConnection(options: FluenceConnectionOptions): Promise<FluenceConnection>;
    disconnect(): Promise<void>;
    sendParticle(particle: Particle): Promise<void>;
    connect(): Promise<void>;
    private _lib2p2Peer;
    private _connection;
    private _relayAddress;
}
//# sourceMappingURL=FluenceConnection.d.ts.map